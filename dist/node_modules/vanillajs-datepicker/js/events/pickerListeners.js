import { today as s, addMonths as u, addYears as f } from "../lib/date.js";
import { findElementInEventPath as d } from "../lib/event.js";
import { switchView as l, goToPrevOrNext as r } from "./functions.js";
function c(e, n) {
  const t = e.picker, o = new Date(t.viewDate), i = t.currentView.id, a = i === 1 ? u(o, n - o.getMonth()) : f(o, n - o.getFullYear());
  t.changeFocus(a).changeView(i - 1).render();
}
function m(e) {
  const n = e.picker, t = s();
  if (e.config.todayBtnMode === 1) {
    if (e.config.autohide) {
      e.setDate(t);
      return;
    }
    e.setDate(t, { render: !1 }), n.update();
  }
  n.viewDate !== t && n.changeFocus(t), n.changeView(0).render();
}
function D(e) {
  e.setDate({ clear: !0 });
}
function v(e) {
  l(e);
}
function V(e) {
  r(e, -1);
}
function C(e) {
  r(e, 1);
}
function k(e, n) {
  const t = d(n, ".datepicker-cell");
  if (!t || t.classList.contains("disabled"))
    return;
  const { id: o, isMinView: i } = e.picker.currentView;
  i ? e.setDate(Number(t.dataset.date)) : o === 1 ? c(e, Number(t.dataset.month)) : c(e, Number(t.dataset.year));
}
function M(e) {
  e.preventDefault();
}
export {
  D as onClickClearBtn,
  C as onClickNextBtn,
  V as onClickPrevBtn,
  m as onClickTodayBtn,
  k as onClickView,
  v as onClickViewSwitch,
  M as onMousedownPicker
};
//# sourceMappingURL=pickerListeners.js.map
