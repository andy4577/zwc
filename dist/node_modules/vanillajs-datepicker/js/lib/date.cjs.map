{"version":3,"file":"date.cjs","sources":["../../../../../../../node_modules/vanillajs-datepicker/js/lib/date.js"],"sourcesContent":["export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month â†’ Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\n// Get the ISO week of a date\nexport function getWeek(date) {\n  // start of ISO week is Monday\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // 1st week == the week where the 4th of January is in\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n\n// Convert date to the first/last date of the month/year of the date\nexport function regularizeDate(date, timeSpan, useLastDate) {\n  if (timeSpan !== 1 && timeSpan !== 2) {\n    return date;\n  }\n  const newDate = new Date(date);\n  if (timeSpan === 1) {\n    useLastDate\n      ? newDate.setMonth(newDate.getMonth() + 1, 0)\n      : newDate.setDate(1);\n  } else {\n    useLastDate\n      ? newDate.setFullYear(newDate.getFullYear() + 1, 0, 0)\n      : newDate.setMonth(0, 1);\n  }\n  return newDate.setHours(0, 0, 0, 0);\n}\n"],"names":["stripTime","timeValue","today","dateValue","args","newDate","addDays","date","amount","addWeeks","addMonths","monthsToSet","expectedMonth","time","addYears","dayDiff","day","from","dayOfTheWeekOf","baseDate","dayOfWeek","weekStart","baseDay","getWeek","thuOfTheWeek","firstThu","startOfYearPeriod","years","year","regularizeDate","timeSpan","useLastDate"],"mappings":"4GAAO,SAASA,EAAUC,EAAW,CACnC,OAAO,IAAI,KAAKA,CAAS,EAAE,SAAS,EAAG,EAAG,EAAG,CAAC,CAChD,CAEO,SAASC,GAAQ,CACtB,OAAO,IAAI,KAAI,EAAG,SAAS,EAAG,EAAG,EAAG,CAAC,CACvC,CAGO,SAASC,KAAaC,EAAM,CACjC,OAAQA,EAAK,OAAM,CACjB,IAAK,GACH,OAAOF,EAAK,EACd,IAAK,GACH,OAAOF,EAAUI,EAAK,EAAE,CAC3B,CAGD,MAAMC,EAAU,IAAI,KAAK,CAAC,EAC1B,OAAAA,EAAQ,YAAY,GAAGD,CAAI,EACpBC,EAAQ,SAAS,EAAG,EAAG,EAAG,CAAC,CACpC,CAEO,SAASC,EAAQC,EAAMC,EAAQ,CACpC,MAAMH,EAAU,IAAI,KAAKE,CAAI,EAC7B,OAAOF,EAAQ,QAAQA,EAAQ,QAAS,EAAGG,CAAM,CACnD,CAEO,SAASC,EAASF,EAAMC,EAAQ,CACrC,OAAOF,EAAQC,EAAMC,EAAS,CAAC,CACjC,CAEO,SAASE,EAAUH,EAAMC,EAAQ,CAGtC,MAAMH,EAAU,IAAI,KAAKE,CAAI,EACvBI,EAAcN,EAAQ,SAAQ,EAAKG,EACzC,IAAII,EAAgBD,EAAc,GAC9BC,EAAgB,IAClBA,GAAiB,IAGnB,MAAMC,EAAOR,EAAQ,SAASM,CAAW,EACzC,OAAON,EAAQ,SAAQ,IAAOO,EAAgBP,EAAQ,QAAQ,CAAC,EAAIQ,CACrE,CAEO,SAASC,EAASP,EAAMC,EAAQ,CAGrC,MAAMH,EAAU,IAAI,KAAKE,CAAI,EACvBK,EAAgBP,EAAQ,WACxBQ,EAAOR,EAAQ,YAAYA,EAAQ,YAAW,EAAKG,CAAM,EAC/D,OAAOI,IAAkB,GAAKP,EAAQ,SAAU,IAAK,EAAIA,EAAQ,QAAQ,CAAC,EAAIQ,CAChF,CAGA,SAASE,EAAQC,EAAKC,EAAM,CAC1B,OAAQD,EAAMC,EAAO,GAAK,CAC5B,CAGO,SAASC,EAAeC,EAAUC,EAAWC,EAAY,EAAG,CACjE,MAAMC,EAAU,IAAI,KAAKH,CAAQ,EAAE,OAAM,EACzC,OAAOb,EAAQa,EAAUJ,EAAQK,EAAWC,CAAS,EAAIN,EAAQO,EAASD,CAAS,CAAC,CACtF,CAGO,SAASE,EAAQhB,EAAM,CAE5B,MAAMiB,EAAeN,EAAeX,EAAM,EAAG,CAAC,EAExCkB,EAAWP,EAAe,IAAI,KAAKM,CAAY,EAAE,SAAS,EAAG,CAAC,EAAG,EAAG,CAAC,EAC3E,OAAO,KAAK,OAAOA,EAAeC,GAAY,MAAS,EAAI,CAC7D,CAIO,SAASC,EAAkBnB,EAAMoB,EAAO,CAE7C,MAAMC,EAAO,IAAI,KAAKrB,CAAI,EAAE,YAAW,EACvC,OAAO,KAAK,MAAMqB,EAAOD,CAAK,EAAIA,CACpC,CAGO,SAASE,EAAetB,EAAMuB,EAAUC,EAAa,CAC1D,GAAID,IAAa,GAAKA,IAAa,EACjC,OAAOvB,EAET,MAAMF,EAAU,IAAI,KAAKE,CAAI,EAC7B,OAAIuB,IAAa,EACfC,EACI1B,EAAQ,SAASA,EAAQ,SAAQ,EAAK,EAAG,CAAC,EAC1CA,EAAQ,QAAQ,CAAC,EAErB0B,EACI1B,EAAQ,YAAYA,EAAQ,YAAa,EAAG,EAAG,EAAG,CAAC,EACnDA,EAAQ,SAAS,EAAG,CAAC,EAEpBA,EAAQ,SAAS,EAAG,EAAG,EAAG,CAAC,CACpC"}