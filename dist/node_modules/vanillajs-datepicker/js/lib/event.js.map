{"version":3,"file":"event.js","sources":["../../../../../../../node_modules/vanillajs-datepicker/js/lib/event.js"],"sourcesContent":["const listenerRegistry = new WeakMap();\nconst {addEventListener, removeEventListener} = EventTarget.prototype;\n\n// Register event listeners to a key object\n// listeners: array of listener definitions;\n//   - each definition must be a flat array of event target and the arguments\n//     used to call addEventListener() on the target\nexport function registerListeners(keyObj, listeners) {\n  let registered = listenerRegistry.get(keyObj);\n  if (!registered) {\n    registered = [];\n    listenerRegistry.set(keyObj, registered);\n  }\n  listeners.forEach((listener) => {\n    addEventListener.call(...listener);\n    registered.push(listener);\n  });\n}\n\nexport function unregisterListeners(keyObj) {\n  let listeners = listenerRegistry.get(keyObj);\n  if (!listeners) {\n    return;\n  }\n  listeners.forEach((listener) => {\n    removeEventListener.call(...listener);\n  });\n  listenerRegistry.delete(keyObj);\n}\n\n// Event.composedPath() polyfill for Edge\n// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec\nif (!Event.prototype.composedPath) {\n  const getComposedPath = (node, path = []) => {\n    path.push(node);\n\n    let parent;\n    if (node.parentNode) {\n      parent = node.parentNode;\n    } else if (node.host) { // ShadowRoot\n      parent = node.host;\n    } else if (node.defaultView) {  // Document\n      parent = node.defaultView;\n    }\n    return parent ? getComposedPath(parent, path) : path;\n  };\n\n  Event.prototype.composedPath = function () {\n    return getComposedPath(this.target);\n  };\n}\n\nfunction findFromPath(path, criteria, currentTarget) {\n  const [node, ...rest] = path;\n  if (criteria(node)) {\n    return node;\n  }\n  if (node === currentTarget || node.tagName === 'HTML' || rest.length === 0) {\n    // stop when reaching currentTarget or <html>\n    return;\n  }\n  return findFromPath(rest, criteria, currentTarget);\n}\n\n// Search for the actual target of a delegated event\nexport function findElementInEventPath(ev, selector) {\n  const criteria = typeof selector === 'function'\n    ? selector\n    : el => el instanceof Element && el.matches(selector);\n  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);\n}\n"],"names":["listenerRegistry","addEventListener","removeEventListener","registerListeners","keyObj","listeners","registered","listener","unregisterListeners","getComposedPath","node","path","parent","findFromPath","criteria","currentTarget","rest","findElementInEventPath","ev","selector","el"],"mappings":"AAAA,MAAMA,IAAmB,oBAAI,WACvB,EAAC,kBAAAC,GAAkB,qBAAAC,EAAmB,IAAI,YAAY;AAMrD,SAASC,EAAkBC,GAAQC,GAAW;AACnD,MAAIC,IAAaN,EAAiB,IAAII,CAAM;AAC5C,EAAKE,MACHA,IAAa,CAAA,GACbN,EAAiB,IAAII,GAAQE,CAAU,IAEzCD,EAAU,QAAQ,CAACE,MAAa;AAC9B,IAAAN,EAAiB,KAAK,GAAGM,CAAQ,GACjCD,EAAW,KAAKC,CAAQ;AAAA,EAC5B,CAAG;AACH;AAEO,SAASC,EAAoBJ,GAAQ;AAC1C,MAAIC,IAAYL,EAAiB,IAAII,CAAM;AAC3C,EAAI,CAACC,MAGLA,EAAU,QAAQ,CAACE,MAAa;AAC9B,IAAAL,EAAoB,KAAK,GAAGK,CAAQ;AAAA,EACxC,CAAG,GACDP,EAAiB,OAAOI,CAAM;AAChC;AAIA,IAAI,CAAC,MAAM,UAAU,cAAc;AACjC,QAAMK,IAAkB,CAACC,GAAMC,IAAO,CAAA,MAAO;AAC3C,IAAAA,EAAK,KAAKD,CAAI;AAEd,QAAIE;AACJ,WAAIF,EAAK,aACPE,IAASF,EAAK,aACLA,EAAK,OACdE,IAASF,EAAK,OACLA,EAAK,gBACdE,IAASF,EAAK,cAETE,IAASH,EAAgBG,GAAQD,CAAI,IAAIA;AAAA,EACpD;AAEE,QAAM,UAAU,eAAe,WAAY;AACzC,WAAOF,EAAgB,KAAK,MAAM;AAAA,EACtC;AACA;AAEA,SAASI,EAAaF,GAAMG,GAAUC,GAAe;AACnD,QAAM,CAACL,MAASM,CAAI,IAAIL;AACxB,MAAIG,EAASJ,CAAI;AACf,WAAOA;AAET,MAAI,EAAAA,MAASK,KAAiBL,EAAK,YAAY,UAAUM,EAAK,WAAW;AAIzE,WAAOH,EAAaG,GAAMF,GAAUC,CAAa;AACnD;AAGO,SAASE,EAAuBC,GAAIC,GAAU;AACnD,QAAML,IAAW,OAAOK,KAAa,aACjCA,IACA,CAAAC,MAAMA,aAAc,WAAWA,EAAG,QAAQD,CAAQ;AACtD,SAAON,EAAaK,EAAG,aAAY,GAAIJ,GAAUI,EAAG,aAAa;AACnE;"}