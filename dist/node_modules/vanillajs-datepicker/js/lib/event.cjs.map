{"version":3,"file":"event.cjs","sources":["../../../../../../../node_modules/vanillajs-datepicker/js/lib/event.js"],"sourcesContent":["const listenerRegistry = new WeakMap();\nconst {addEventListener, removeEventListener} = EventTarget.prototype;\n\n// Register event listeners to a key object\n// listeners: array of listener definitions;\n//   - each definition must be a flat array of event target and the arguments\n//     used to call addEventListener() on the target\nexport function registerListeners(keyObj, listeners) {\n  let registered = listenerRegistry.get(keyObj);\n  if (!registered) {\n    registered = [];\n    listenerRegistry.set(keyObj, registered);\n  }\n  listeners.forEach((listener) => {\n    addEventListener.call(...listener);\n    registered.push(listener);\n  });\n}\n\nexport function unregisterListeners(keyObj) {\n  let listeners = listenerRegistry.get(keyObj);\n  if (!listeners) {\n    return;\n  }\n  listeners.forEach((listener) => {\n    removeEventListener.call(...listener);\n  });\n  listenerRegistry.delete(keyObj);\n}\n\n// Event.composedPath() polyfill for Edge\n// based on https://gist.github.com/kleinfreund/e9787d73776c0e3750dcfcdc89f100ec\nif (!Event.prototype.composedPath) {\n  const getComposedPath = (node, path = []) => {\n    path.push(node);\n\n    let parent;\n    if (node.parentNode) {\n      parent = node.parentNode;\n    } else if (node.host) { // ShadowRoot\n      parent = node.host;\n    } else if (node.defaultView) {  // Document\n      parent = node.defaultView;\n    }\n    return parent ? getComposedPath(parent, path) : path;\n  };\n\n  Event.prototype.composedPath = function () {\n    return getComposedPath(this.target);\n  };\n}\n\nfunction findFromPath(path, criteria, currentTarget) {\n  const [node, ...rest] = path;\n  if (criteria(node)) {\n    return node;\n  }\n  if (node === currentTarget || node.tagName === 'HTML' || rest.length === 0) {\n    // stop when reaching currentTarget or <html>\n    return;\n  }\n  return findFromPath(rest, criteria, currentTarget);\n}\n\n// Search for the actual target of a delegated event\nexport function findElementInEventPath(ev, selector) {\n  const criteria = typeof selector === 'function'\n    ? selector\n    : el => el instanceof Element && el.matches(selector);\n  return findFromPath(ev.composedPath(), criteria, ev.currentTarget);\n}\n"],"names":["listenerRegistry","addEventListener","removeEventListener","registerListeners","keyObj","listeners","registered","listener","unregisterListeners","getComposedPath","node","path","parent","findFromPath","criteria","currentTarget","rest","findElementInEventPath","ev","selector","el"],"mappings":"4GAAA,MAAMA,EAAmB,IAAI,QACvB,CAAC,iBAAAC,EAAkB,oBAAAC,CAAmB,EAAI,YAAY,UAMrD,SAASC,EAAkBC,EAAQC,EAAW,CACnD,IAAIC,EAAaN,EAAiB,IAAII,CAAM,EACvCE,IACHA,EAAa,CAAA,EACbN,EAAiB,IAAII,EAAQE,CAAU,GAEzCD,EAAU,QAASE,GAAa,CAC9BN,EAAiB,KAAK,GAAGM,CAAQ,EACjCD,EAAW,KAAKC,CAAQ,CAC5B,CAAG,CACH,CAEO,SAASC,EAAoBJ,EAAQ,CAC1C,IAAIC,EAAYL,EAAiB,IAAII,CAAM,EACvC,CAACC,IAGLA,EAAU,QAASE,GAAa,CAC9BL,EAAoB,KAAK,GAAGK,CAAQ,CACxC,CAAG,EACDP,EAAiB,OAAOI,CAAM,EAChC,CAIA,GAAI,CAAC,MAAM,UAAU,aAAc,CACjC,MAAMK,EAAkB,CAACC,EAAMC,EAAO,CAAA,IAAO,CAC3CA,EAAK,KAAKD,CAAI,EAEd,IAAIE,EACJ,OAAIF,EAAK,WACPE,EAASF,EAAK,WACLA,EAAK,KACdE,EAASF,EAAK,KACLA,EAAK,cACdE,EAASF,EAAK,aAETE,EAASH,EAAgBG,EAAQD,CAAI,EAAIA,CACpD,EAEE,MAAM,UAAU,aAAe,UAAY,CACzC,OAAOF,EAAgB,KAAK,MAAM,CACtC,CACA,CAEA,SAASI,EAAaF,EAAMG,EAAUC,EAAe,CACnD,KAAM,CAACL,KAASM,CAAI,EAAIL,EACxB,GAAIG,EAASJ,CAAI,EACf,OAAOA,EAET,GAAI,EAAAA,IAASK,GAAiBL,EAAK,UAAY,QAAUM,EAAK,SAAW,GAIzE,OAAOH,EAAaG,EAAMF,EAAUC,CAAa,CACnD,CAGO,SAASE,EAAuBC,EAAIC,EAAU,CACnD,MAAML,EAAW,OAAOK,GAAa,WACjCA,EACAC,GAAMA,aAAc,SAAWA,EAAG,QAAQD,CAAQ,EACtD,OAAON,EAAaK,EAAG,aAAY,EAAIJ,EAAUI,EAAG,aAAa,CACnE"}