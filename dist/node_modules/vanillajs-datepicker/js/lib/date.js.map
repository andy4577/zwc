{"version":3,"file":"date.js","sources":["../../../../../../../node_modules/vanillajs-datepicker/js/lib/date.js"],"sourcesContent":["export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month â†’ Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\n// Get the ISO week of a date\nexport function getWeek(date) {\n  // start of ISO week is Monday\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // 1st week == the week where the 4th of January is in\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n\n// Convert date to the first/last date of the month/year of the date\nexport function regularizeDate(date, timeSpan, useLastDate) {\n  if (timeSpan !== 1 && timeSpan !== 2) {\n    return date;\n  }\n  const newDate = new Date(date);\n  if (timeSpan === 1) {\n    useLastDate\n      ? newDate.setMonth(newDate.getMonth() + 1, 0)\n      : newDate.setDate(1);\n  } else {\n    useLastDate\n      ? newDate.setFullYear(newDate.getFullYear() + 1, 0, 0)\n      : newDate.setMonth(0, 1);\n  }\n  return newDate.setHours(0, 0, 0, 0);\n}\n"],"names":["stripTime","timeValue","today","dateValue","args","newDate","addDays","date","amount","addWeeks","addMonths","monthsToSet","expectedMonth","time","addYears","dayDiff","day","from","dayOfTheWeekOf","baseDate","dayOfWeek","weekStart","baseDay","getWeek","thuOfTheWeek","firstThu","startOfYearPeriod","years","year","regularizeDate","timeSpan","useLastDate"],"mappings":"AAAO,SAASA,EAAUC,GAAW;AACnC,SAAO,IAAI,KAAKA,CAAS,EAAE,SAAS,GAAG,GAAG,GAAG,CAAC;AAChD;AAEO,SAASC,IAAQ;AACtB,SAAO,IAAI,KAAI,EAAG,SAAS,GAAG,GAAG,GAAG,CAAC;AACvC;AAGO,SAASC,KAAaC,GAAM;AACjC,UAAQA,EAAK,QAAM;AAAA,IACjB,KAAK;AACH,aAAOF,EAAK;AAAA,IACd,KAAK;AACH,aAAOF,EAAUI,EAAK,EAAE;AAAA,EAC3B;AAGD,QAAMC,IAAU,IAAI,KAAK,CAAC;AAC1B,SAAAA,EAAQ,YAAY,GAAGD,CAAI,GACpBC,EAAQ,SAAS,GAAG,GAAG,GAAG,CAAC;AACpC;AAEO,SAASC,EAAQC,GAAMC,GAAQ;AACpC,QAAMH,IAAU,IAAI,KAAKE,CAAI;AAC7B,SAAOF,EAAQ,QAAQA,EAAQ,QAAS,IAAGG,CAAM;AACnD;AAEO,SAASC,EAASF,GAAMC,GAAQ;AACrC,SAAOF,EAAQC,GAAMC,IAAS,CAAC;AACjC;AAEO,SAASE,EAAUH,GAAMC,GAAQ;AAGtC,QAAMH,IAAU,IAAI,KAAKE,CAAI,GACvBI,IAAcN,EAAQ,SAAQ,IAAKG;AACzC,MAAII,IAAgBD,IAAc;AAClC,EAAIC,IAAgB,MAClBA,KAAiB;AAGnB,QAAMC,IAAOR,EAAQ,SAASM,CAAW;AACzC,SAAON,EAAQ,SAAQ,MAAOO,IAAgBP,EAAQ,QAAQ,CAAC,IAAIQ;AACrE;AAEO,SAASC,EAASP,GAAMC,GAAQ;AAGrC,QAAMH,IAAU,IAAI,KAAKE,CAAI,GACvBK,IAAgBP,EAAQ,YACxBQ,IAAOR,EAAQ,YAAYA,EAAQ,YAAW,IAAKG,CAAM;AAC/D,SAAOI,MAAkB,KAAKP,EAAQ,SAAU,MAAK,IAAIA,EAAQ,QAAQ,CAAC,IAAIQ;AAChF;AAGA,SAASE,EAAQC,GAAKC,GAAM;AAC1B,UAAQD,IAAMC,IAAO,KAAK;AAC5B;AAGO,SAASC,EAAeC,GAAUC,GAAWC,IAAY,GAAG;AACjE,QAAMC,IAAU,IAAI,KAAKH,CAAQ,EAAE,OAAM;AACzC,SAAOb,EAAQa,GAAUJ,EAAQK,GAAWC,CAAS,IAAIN,EAAQO,GAASD,CAAS,CAAC;AACtF;AAGO,SAASE,EAAQhB,GAAM;AAE5B,QAAMiB,IAAeN,EAAeX,GAAM,GAAG,CAAC,GAExCkB,IAAWP,EAAe,IAAI,KAAKM,CAAY,EAAE,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC;AAC3E,SAAO,KAAK,OAAOA,IAAeC,KAAY,MAAS,IAAI;AAC7D;AAIO,SAASC,EAAkBnB,GAAMoB,GAAO;AAE7C,QAAMC,IAAO,IAAI,KAAKrB,CAAI,EAAE,YAAW;AACvC,SAAO,KAAK,MAAMqB,IAAOD,CAAK,IAAIA;AACpC;AAGO,SAASE,EAAetB,GAAMuB,GAAUC,GAAa;AAC1D,MAAID,MAAa,KAAKA,MAAa;AACjC,WAAOvB;AAET,QAAMF,IAAU,IAAI,KAAKE,CAAI;AAC7B,SAAIuB,MAAa,IACfC,IACI1B,EAAQ,SAASA,EAAQ,SAAQ,IAAK,GAAG,CAAC,IAC1CA,EAAQ,QAAQ,CAAC,IAErB0B,IACI1B,EAAQ,YAAYA,EAAQ,YAAa,IAAG,GAAG,GAAG,CAAC,IACnDA,EAAQ,SAAS,GAAG,CAAC,GAEpBA,EAAQ,SAAS,GAAG,GAAG,GAAG,CAAC;AACpC;"}