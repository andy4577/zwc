{"version":3,"file":"Picker.js","sources":["../../../../../../../node_modules/vanillajs-datepicker/js/picker/Picker.js"],"sourcesContent":["import {hasProperty, lastItemOf, isInRange, limitToRange} from '../lib/utils.js';\nimport {today} from '../lib/date.js';\nimport {parseHTML, getParent, showElement, hideElement, emptyChildNodes} from '../lib/dom.js';\nimport {registerListeners} from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport {triggerDatepickerEvent} from '../events/functions.js';\nimport {\n  onClickTodayBtn,\n  onClickClearBtn,\n  onClickViewSwitch,\n  onClickPrevBtn,\n  onClickNextBtn,\n  onClickView,\n  onMousedownPicker,\n} from '../events/pickerListeners.js';\n\nconst orientClasses = ['left', 'top', 'right', 'bottom'].reduce((obj, key) => {\n  obj[key] = `datepicker-orient-${key}`;\n  return obj;\n}, {});\nconst toPx = num => num ? `${num}px` : num;\n\nfunction processPickerOptions(picker, options) {\n  if (options.title !== undefined) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n  if (options.prevArrow) {\n    const prevBtn = picker.controls.prevBtn;\n    emptyChildNodes(prevBtn);\n    options.prevArrow.forEach((node) => {\n      prevBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.nextArrow) {\n    const nextBtn = picker.controls.nextBtn;\n    emptyChildNodes(nextBtn);\n    options.nextArrow.forEach((node) => {\n      nextBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.locale) {\n    picker.controls.todayBtn.textContent = options.locale.today;\n    picker.controls.clearBtn.textContent = options.locale.clear;\n  }\n  if (options.todayBtn !== undefined) {\n    if (options.todayBtn) {\n      showElement(picker.controls.todayBtn);\n    } else {\n      hideElement(picker.controls.todayBtn);\n    }\n  }\n  if (hasProperty(options, 'minDate') || hasProperty(options, 'maxDate')) {\n    const {minDate, maxDate} = picker.datepicker.config;\n    picker.controls.todayBtn.disabled = !isInRange(today(), minDate, maxDate);\n  }\n  if (options.clearBtn !== undefined) {\n    if (options.clearBtn) {\n      showElement(picker.controls.clearBtn);\n    } else {\n      hideElement(picker.controls.clearBtn);\n    }\n  }\n}\n\n// Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\nfunction computeResetViewDate(datepicker) {\n  const {dates, config} = datepicker;\n  const viewDate = dates.length > 0 ? lastItemOf(dates) : config.defaultViewDate;\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n}\n\n// Change current view's view date\nfunction setViewDate(picker, newDate) {\n  const oldViewDate = new Date(picker.viewDate);\n  const newViewDate = new Date(newDate);\n  const {id, year, first, last} = picker.currentView;\n  const viewYear = newViewDate.getFullYear();\n\n  picker.viewDate = newDate;\n  if (viewYear !== oldViewDate.getFullYear()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeYear');\n  }\n  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeMonth');\n  }\n\n  // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n    case 1:\n      return viewYear !== year;\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n}\n\n// find the closet scrollable ancestor elemnt under the body\nfunction findScrollParents(el) {\n  const parent = getParent(el);\n  if (parent === document.body || !parent) {\n    return;\n  }\n\n  // checking overflow only is enough because computed overflow cannot be\n  // visible or a combination of visible and other when either axis is set\n  // to other than visible.\n  // (Setting one axis to other than 'visible' while the other is 'visible'\n  // results in the other axis turning to 'auto')\n  return window.getComputedStyle(parent).overflow !== 'visible'\n    ? parent\n    : findScrollParents(parent);\n}\n\n// Class representing the picker UI\nexport default class Picker {\n  constructor(datepicker) {\n    const {config} = this.datepicker = datepicker;\n\n    const template = pickerTemplate.replace(/%buttonClass%/g, config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;\n    const [todayBtn, clearBtn] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevBtn,\n      viewSwitch,\n      nextBtn,\n      todayBtn,\n      clearBtn,\n    };\n    this.main = main;\n    this.controls = controls;\n\n    const elementClass = datepicker.inline ? 'inline' : 'dropdown';\n    element.classList.add(`datepicker-${elementClass}`);\n\n    processPickerOptions(this, config);\n    this.viewDate = computeResetViewDate(datepicker);\n\n    // set up event listeners\n    registerListeners(datepicker, [\n      [element, 'mousedown', onMousedownPicker],\n      [main, 'click', onClickView.bind(null, datepicker)],\n      [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)],\n      [controls.prevBtn, 'click', onClickPrevBtn.bind(null, datepicker)],\n      [controls.nextBtn, 'click', onClickNextBtn.bind(null, datepicker)],\n      [controls.todayBtn, 'click', onClickTodayBtn.bind(null, datepicker)],\n      [controls.clearBtn, 'click', onClickClearBtn.bind(null, datepicker)],\n    ]);\n\n    // set up views\n    this.views = [\n      new DaysView(this),\n      new MonthsView(this),\n      new YearsView(this, {id: 2, name: 'years', cellClass: 'year', step: 1}),\n      new YearsView(this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),\n    ];\n    this.currentView = this.views[config.startView];\n\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n    if (config.container) {\n      config.container.appendChild(this.element);\n    } else {\n      datepicker.inputField.after(this.element);\n    }\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach((view) => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.element.remove();\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n\n    const {datepicker, element} = this;\n    if (datepicker.inline) {\n      element.classList.add('active');\n    } else {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(datepicker.inputField);\n      if (inputDirection !== getTextDirection(getParent(element))) {\n        element.dir = inputDirection;\n      } else if (element.dir) {\n        element.removeAttribute('dir');\n      }\n\n      element.style.visiblity = 'hidden';\n      element.classList.add('active');\n      this.place();\n      element.style.visiblity = '';\n\n      if (datepicker.config.disableTouchKeyboard) {\n        datepicker.inputField.blur();\n      }\n    }\n    this.active = true;\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {classList, offsetParent, style} = this.element;\n    const {config, inputField} = this.datepicker;\n    const {\n      width: calendarWidth,\n      height: calendarHeight,\n    } = this.element.getBoundingClientRect();\n    const {\n      left: inputLeft,\n      top: inputTop,\n      right: inputRight,\n      bottom: inputBottom,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {x: orientX, y: orientY} = config.orientation;\n    let left = inputLeft;\n    let top = inputTop;\n\n    // caliculate offsetLeft/Top of inputField\n    if (offsetParent === document.body || !offsetParent) {\n      left += window.scrollX;\n      top += window.scrollY;\n    } else {\n      const offsetParentRect = offsetParent.getBoundingClientRect();\n      left -= offsetParentRect.left - offsetParent.scrollLeft;\n      top -= offsetParentRect.top - offsetParent.scrollTop;\n    }\n\n    // caliculate the boundaries of the visible area that contains inputField\n    const scrollParent = findScrollParents(inputField);\n    let scrollAreaLeft = 0;\n    let scrollAreaTop = 0;\n    let {\n      clientWidth: scrollAreaRight,\n      clientHeight: scrollAreaBottom,\n    } = document.documentElement;\n\n    if (scrollParent) {\n      const scrollParentRect = scrollParent.getBoundingClientRect();\n      if (scrollParentRect.top > 0) {\n        scrollAreaTop = scrollParentRect.top;\n      }\n      if (scrollParentRect.left > 0) {\n        scrollAreaLeft = scrollParentRect.left;\n      }\n      if (scrollParentRect.right < scrollAreaRight) {\n        scrollAreaRight = scrollParentRect.right;\n      }\n      if (scrollParentRect.bottom < scrollAreaBottom) {\n        scrollAreaBottom = scrollParentRect.bottom;\n      }\n    }\n\n    // determine the horizontal orientation and left position\n    let adjustment = 0;\n    if (orientX === 'auto') {\n      if (inputLeft < scrollAreaLeft) {\n        orientX = 'left';\n        adjustment = scrollAreaLeft - inputLeft;\n      } else if (inputLeft + calendarWidth > scrollAreaRight) {\n        orientX = 'right';\n        if (scrollAreaRight < inputRight) {\n          adjustment = scrollAreaRight - inputRight;\n        }\n      } else if (getTextDirection(inputField) === 'rtl') {\n        orientX = inputRight - calendarWidth < scrollAreaLeft ? 'left' : 'right';\n      } else {\n        orientX = 'left';\n      }\n    }\n    if (orientX === 'right') {\n      left += inputWidth - calendarWidth;\n    }\n    left += adjustment;\n\n    // determine the vertical orientation and top position\n    if (orientY === 'auto') {\n      if (inputTop - calendarHeight > scrollAreaTop) {\n        orientY = inputBottom + calendarHeight > scrollAreaBottom ? 'top' : 'bottom';\n      } else {\n        orientY = 'bottom';\n      }\n    }\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove(...Object.values(orientClasses));\n    classList.add(orientClasses[orientX], orientClasses[orientY]);\n\n    style.left = toPx(left);\n    style.top = toPx(top);\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevBtnDisabled(disabled) {\n    this.controls.prevBtn.disabled = disabled;\n  }\n\n  setNextBtnDisabled(disabled) {\n    this.controls.nextBtn.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const oldView = this.currentView;\n    const newView =  this.views[viewId];\n    if (newView.id !== oldView.id) {\n      this.currentView = newView;\n      this._renderMethod = 'render';\n      triggerDatepickerEvent(this.datepicker, 'changeView');\n      this.main.replaceChild(newView.element, oldView.element);\n    }\n    return this;\n  }\n\n  // Change the focused date (view date)\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach((view) => {\n      view.updateFocus();\n    });\n    return this;\n  }\n\n  // Apply the change of the selected dates\n  update() {\n    const newViewDate = computeResetViewDate(this.datepicker);\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach((view) => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  }\n\n  // Refresh the picker UI\n  render(quickRender = true) {\n    const renderMethod = (quickRender && this._renderMethod) || 'render';\n    delete this._renderMethod;\n\n    this.currentView[renderMethod]();\n  }\n}\n"],"names":["orientClasses","obj","key","toPx","num","processPickerOptions","picker","options","showElement","hideElement","prevBtn","emptyChildNodes","node","nextBtn","hasProperty","minDate","maxDate","isInRange","today","computeResetViewDate","datepicker","dates","config","viewDate","lastItemOf","limitToRange","setViewDate","newDate","oldViewDate","newViewDate","id","year","first","last","viewYear","triggerDatepickerEvent","getTextDirection","el","findScrollParents","parent","getParent","Picker","template","pickerTemplate","element","parseHTML","header","main","footer","title","viewSwitch","todayBtn","clearBtn","controls","elementClass","registerListeners","onMousedownPicker","onClickView","onClickViewSwitch","onClickPrevBtn","onClickNextBtn","onClickTodayBtn","onClickClearBtn","DaysView","MonthsView","YearsView","view","inputDirection","classList","offsetParent","style","inputField","calendarWidth","calendarHeight","inputLeft","inputTop","inputRight","inputBottom","inputWidth","inputHeight","orientX","orientY","left","top","offsetParentRect","scrollParent","scrollAreaLeft","scrollAreaTop","scrollAreaRight","scrollAreaBottom","scrollParentRect","adjustment","labelText","disabled","viewId","oldView","newView","quickRender","renderMethod"],"mappings":"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"}