{"version":3,"file":"YearsView.js","sources":["../../../../../../../../node_modules/vanillajs-datepicker/js/picker/views/YearsView.js"],"sourcesContent":["import {hasProperty, pushUnique, createTagRepeat} from '../../lib/utils.js';\nimport {dateValue, startOfYearPeriod} from '../../lib/date.js';\nimport {parseHTML} from '../../lib/dom.js';\nimport View from './View.js';\n\nfunction toTitleCase(word) {\n  return [...word].reduce((str, ch, ix) => str += ix ? ch : ch.toUpperCase(), '');\n}\n\n// Class representing the years and decades view elements\nexport default class YearsView extends View {\n  constructor(picker, config) {\n    super(picker, config);\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      this.navStep = this.step * 10;\n      this.beforeShowOption = `beforeShow${toTitleCase(this.cellClass)}`;\n      this.grid = this.element;\n      this.element.classList.add(this.name, 'datepicker-grid');\n      this.grid.appendChild(parseHTML(createTagRepeat('span', 12)));\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    if (hasProperty(options, 'minDate')) {\n      if (options.minDate === undefined) {\n        this.minYear = this.minDate = undefined;\n      } else {\n        this.minYear = startOfYearPeriod(options.minDate, this.step);\n        this.minDate = dateValue(this.minYear, 0, 1);\n      }\n    }\n    if (hasProperty(options, 'maxDate')) {\n      if (options.maxDate === undefined) {\n        this.maxYear = this.maxDate = undefined;\n      } else {\n        this.maxYear = startOfYearPeriod(options.maxDate, this.step);\n        this.maxDate = dateValue(this.maxYear, 11, 31);\n      }\n    }\n    if (this.isMinView) {\n      if (options.datesDisabled) {\n        this.datesDisabled = options.datesDisabled;\n      }\n    } else {\n      this.datesDisabled = [];\n    }\n    if (options[this.beforeShowOption] !== undefined) {\n      const beforeShow = options[this.beforeShowOption];\n      this.beforeShow = typeof beforeShow === 'function' ? beforeShow : undefined;\n    }\n  }\n\n  // Update view's settings to reflect the viewDate set on the picker\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    const first = startOfYearPeriod(viewDate, this.navStep);\n    const last = first + 9 * this.step;\n\n    this.first = first;\n    this.last = last;\n    this.start = first - this.step;\n    this.focused = startOfYearPeriod(viewDate, this.step);\n  }\n\n  // Update view's settings to reflect the selected dates\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates.reduce((years, timeValue) => {\n      return pushUnique(years, startOfYearPeriod(timeValue, this.step));\n    }, []);\n    if (rangepicker && rangepicker.dates) {\n      this.range = rangepicker.dates.map(timeValue => {\n        if (timeValue !== undefined) {\n          return startOfYearPeriod(timeValue, this.step);\n        }\n      });\n    }\n  }\n\n  // Update the entire view UI\n  render() {\n    // refresh disabled years on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n    // this.disabled = [...this.datesDisabled];\n    this.disabled = this.datesDisabled.map(disabled => new Date(disabled).getFullYear());\n\n    this.picker.setViewSwitchLabel(`${this.first}-${this.last}`);\n    this.picker.setPrevBtnDisabled(this.first <= this.minYear);\n    this.picker.setNextBtnDisabled(this.last >= this.maxYear);\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      const current = this.start + (index * this.step);\n      const date = dateValue(current, 0, 1);\n\n      el.className = `datepicker-cell ${this.cellClass}`;\n      if (this.isMinView) {\n        el.dataset.date = date;\n      }\n      el.textContent = el.dataset.year = current;\n\n      if (index === 0) {\n        classList.add('prev');\n      } else if (index === 11) {\n        classList.add('next');\n      }\n      if (current < this.minYear || current > this.maxYear || this.disabled.includes(current)) {\n        classList.add('disabled');\n      }\n      if (this.range) {\n        const [rangeStart, rangeEnd] = this.range;\n        if (current > rangeStart && current < rangeEnd) {\n          classList.add('range');\n        }\n        if (current === rangeStart) {\n          classList.add('range-start');\n        }\n        if (current === rangeEnd) {\n          classList.add('range-end');\n        }\n      }\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n\n      if (this.beforeShow) {\n        this.performBeforeHook(el, current, date);\n      }\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const [rangeStart, rangeEnd] = this.range || [];\n    this.grid\n      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')\n      .forEach((el) => {\n        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n      });\n    Array.from(this.grid.children).forEach((el) => {\n      const current = Number(el.textContent);\n      const classList = el.classList;\n      if (current > rangeStart && current < rangeEnd) {\n        classList.add('range');\n      }\n      if (current === rangeStart) {\n        classList.add('range-start');\n      }\n      if (current === rangeEnd) {\n        classList.add('range-end');\n      }\n      if (this.selected.includes(current)) {\n        classList.add('selected');\n      }\n      if (current === this.focused) {\n        classList.add('focused');\n      }\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    const index = Math.round((this.focused - this.start) / this.step);\n    this.grid.querySelectorAll('.focused').forEach((el) => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[index].classList.add('focused');\n  }\n}\n"],"names":["toTitleCase","word","str","ch","ix","YearsView","View","picker","config","options","onConstruction","parseHTML","createTagRepeat","hasProperty","startOfYearPeriod","dateValue","beforeShow","viewDate","first","last","dates","rangepicker","years","timeValue","pushUnique","disabled","el","index","classList","current","date","rangeStart","rangeEnd"],"mappings":"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"}