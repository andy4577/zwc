import { pushUnique as a } from "../../lib/utils.js";
import { parseHTML as l, replaceChildNodes as c } from "../../lib/dom.js";
class f {
  constructor(s, i) {
    Object.assign(this, i, {
      picker: s,
      element: l('<div class="datepicker-view"></div>').firstChild,
      selected: []
    }), this.init(this.picker.datepicker.config);
  }
  init(s) {
    s.pickLevel !== void 0 && (this.isMinView = this.id === s.pickLevel), this.setOptions(s), this.updateFocus(), this.updateSelection();
  }
  performBeforeHook(s, i, d) {
    let e = this.beforeShow(new Date(d));
    switch (typeof e) {
      case "boolean":
        e = { enabled: e };
        break;
      case "string":
        e = { classes: e };
    }
    if (e) {
      if (e.enabled === !1 && (s.classList.add("disabled"), a(this.disabled, i)), e.classes) {
        const t = e.classes.split(/\s+/);
        s.classList.add(...t), t.includes("disabled") && a(this.disabled, i);
      }
      e.content && c(s, e.content);
    }
  }
}
export {
  f as default
};
//# sourceMappingURL=View.js.map
