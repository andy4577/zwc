{"version":3,"file":"MonthsView.cjs","sources":["../../../../../../../../node_modules/vanillajs-datepicker/js/picker/views/MonthsView.js"],"sourcesContent":["import {hasProperty, pushUnique, createTagRepeat} from '../../lib/utils.js';\nimport {dateValue} from '../../lib/date.js';\nimport {parseHTML} from '../../lib/dom.js';\nimport View from './View.js';\n\nfunction computeMonthRange(range, thisYear) {\n  if (!range || !range[0] || !range[1]) {\n    return;\n  }\n\n  const [[startY, startM], [endY, endM]] = range;\n  if (startY > thisYear || endY < thisYear) {\n    return;\n  }\n  return [\n    startY === thisYear ? startM : -1,\n    endY === thisYear ? endM : 12,\n  ];\n}\n\nexport default class MonthsView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 1,\n      name: 'months',\n      cellClass: 'month',\n    });\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      this.grid = this.element;\n      this.element.classList.add('months', 'datepicker-grid');\n      this.grid.appendChild(parseHTML(createTagRepeat('span', 12, {'data-month': ix => ix})));\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    if (options.locale) {\n      this.monthNames = options.locale.monthsShort;\n    }\n    if (hasProperty(options, 'minDate')) {\n      if (options.minDate === undefined) {\n        this.minYear = this.minMonth = this.minDate = undefined;\n      } else {\n        const minDateObj = new Date(options.minDate);\n        this.minYear = minDateObj.getFullYear();\n        this.minMonth = minDateObj.getMonth();\n        this.minDate = minDateObj.setDate(1);\n      }\n    }\n    if (hasProperty(options, 'maxDate')) {\n      if (options.maxDate === undefined) {\n        this.maxYear = this.maxMonth = this.maxDate = undefined;\n      } else {\n        const maxDateObj = new Date(options.maxDate);\n        this.maxYear = maxDateObj.getFullYear();\n        this.maxMonth = maxDateObj.getMonth();\n        this.maxDate = dateValue(this.maxYear, this.maxMonth + 1, 0);\n      }\n    }\n    if (this.isMinView) {\n      if (options.datesDisabled) {\n        this.datesDisabled = options.datesDisabled;\n      }\n    } else {\n      this.datesDisabled = [];\n    }\n    if (options.beforeShowMonth !== undefined) {\n      this.beforeShow = typeof options.beforeShowMonth === 'function'\n        ? options.beforeShowMonth\n        : undefined;\n    }\n  }\n\n  // Update view's settings to reflect the viewDate set on the picker\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    this.year = viewDate.getFullYear();\n    this.focused = viewDate.getMonth();\n  }\n\n  // Update view's settings to reflect the selected dates\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates.reduce((selected, timeValue) => {\n      const date = new Date(timeValue);\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      if (selected[year] === undefined) {\n        selected[year] = [month];\n      } else {\n        pushUnique(selected[year], month);\n      }\n      return selected;\n    }, {});\n    if (rangepicker && rangepicker.dates) {\n      this.range = rangepicker.dates.map(timeValue => {\n        const date = new Date(timeValue);\n        return isNaN(date) ? undefined : [date.getFullYear(), date.getMonth()];\n      });\n    }\n  }\n\n  // Update the entire view UI\n  render() {\n    // refresh disabled months on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n    // this.disabled = [...this.datesDisabled];\n    this.disabled = this.datesDisabled.reduce((arr, disabled) => {\n      const dt = new Date(disabled);\n      if (this.year === dt.getFullYear()) {\n        arr.push(dt.getMonth());\n      }\n      return arr;\n    }, []);\n\n    this.picker.setViewSwitchLabel(this.year);\n    this.picker.setPrevBtnDisabled(this.year <= this.minYear);\n    this.picker.setNextBtnDisabled(this.year >= this.maxYear);\n\n    const selected = this.selected[this.year] || [];\n    const yrOutOfRange = this.year < this.minYear || this.year > this.maxYear;\n    const isMinYear = this.year === this.minYear;\n    const isMaxYear = this.year === this.maxYear;\n    const range = computeMonthRange(this.range, this.year);\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      const date = dateValue(this.year, index, 1);\n\n      el.className = `datepicker-cell ${this.cellClass}`;\n      if (this.isMinView) {\n        el.dataset.date = date;\n      }\n      // reset text on every render to clear the custom content set\n      // by beforeShow hook at previous render\n      el.textContent = this.monthNames[index];\n\n      if (\n        yrOutOfRange\n        || isMinYear && index < this.minMonth\n        || isMaxYear && index > this.maxMonth\n        || this.disabled.includes(index)\n      ) {\n        classList.add('disabled');\n      }\n      if (range) {\n        const [rangeStart, rangeEnd] = range;\n        if (index > rangeStart && index < rangeEnd) {\n          classList.add('range');\n        }\n        if (index === rangeStart) {\n          classList.add('range-start');\n        }\n        if (index === rangeEnd) {\n          classList.add('range-end');\n        }\n      }\n      if (selected.includes(index)) {\n        classList.add('selected');\n      }\n      if (index === this.focused) {\n        classList.add('focused');\n      }\n\n      if (this.beforeShow) {\n        this.performBeforeHook(el, index, date);\n      }\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const selected = this.selected[this.year] || [];\n    const [rangeStart, rangeEnd] = computeMonthRange(this.range, this.year) || [];\n    this.grid\n      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')\n      .forEach((el) => {\n        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n      });\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      if (index > rangeStart && index < rangeEnd) {\n        classList.add('range');\n      }\n      if (index === rangeStart) {\n        classList.add('range-start');\n      }\n      if (index === rangeEnd) {\n        classList.add('range-end');\n      }\n      if (selected.includes(index)) {\n        classList.add('selected');\n      }\n      if (index === this.focused) {\n        classList.add('focused');\n      }\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    this.grid.querySelectorAll('.focused').forEach((el) => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[this.focused].classList.add('focused');\n  }\n}"],"names":["computeMonthRange","range","thisYear","startY","startM","endY","endM","MonthsView","View","picker","options","onConstruction","parseHTML","createTagRepeat","ix","hasProperty","minDateObj","maxDateObj","dateValue","viewDate","dates","rangepicker","selected","timeValue","date","year","month","pushUnique","arr","disabled","dt","yrOutOfRange","isMinYear","isMaxYear","el","index","classList","rangeStart","rangeEnd"],"mappings":"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"}