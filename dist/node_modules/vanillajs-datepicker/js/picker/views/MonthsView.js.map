{"version":3,"file":"MonthsView.js","sources":["../../../../../../../../node_modules/vanillajs-datepicker/js/picker/views/MonthsView.js"],"sourcesContent":["import {hasProperty, pushUnique, createTagRepeat} from '../../lib/utils.js';\nimport {dateValue} from '../../lib/date.js';\nimport {parseHTML} from '../../lib/dom.js';\nimport View from './View.js';\n\nfunction computeMonthRange(range, thisYear) {\n  if (!range || !range[0] || !range[1]) {\n    return;\n  }\n\n  const [[startY, startM], [endY, endM]] = range;\n  if (startY > thisYear || endY < thisYear) {\n    return;\n  }\n  return [\n    startY === thisYear ? startM : -1,\n    endY === thisYear ? endM : 12,\n  ];\n}\n\nexport default class MonthsView extends View {\n  constructor(picker) {\n    super(picker, {\n      id: 1,\n      name: 'months',\n      cellClass: 'month',\n    });\n  }\n\n  init(options, onConstruction = true) {\n    if (onConstruction) {\n      this.grid = this.element;\n      this.element.classList.add('months', 'datepicker-grid');\n      this.grid.appendChild(parseHTML(createTagRepeat('span', 12, {'data-month': ix => ix})));\n    }\n    super.init(options);\n  }\n\n  setOptions(options) {\n    if (options.locale) {\n      this.monthNames = options.locale.monthsShort;\n    }\n    if (hasProperty(options, 'minDate')) {\n      if (options.minDate === undefined) {\n        this.minYear = this.minMonth = this.minDate = undefined;\n      } else {\n        const minDateObj = new Date(options.minDate);\n        this.minYear = minDateObj.getFullYear();\n        this.minMonth = minDateObj.getMonth();\n        this.minDate = minDateObj.setDate(1);\n      }\n    }\n    if (hasProperty(options, 'maxDate')) {\n      if (options.maxDate === undefined) {\n        this.maxYear = this.maxMonth = this.maxDate = undefined;\n      } else {\n        const maxDateObj = new Date(options.maxDate);\n        this.maxYear = maxDateObj.getFullYear();\n        this.maxMonth = maxDateObj.getMonth();\n        this.maxDate = dateValue(this.maxYear, this.maxMonth + 1, 0);\n      }\n    }\n    if (this.isMinView) {\n      if (options.datesDisabled) {\n        this.datesDisabled = options.datesDisabled;\n      }\n    } else {\n      this.datesDisabled = [];\n    }\n    if (options.beforeShowMonth !== undefined) {\n      this.beforeShow = typeof options.beforeShowMonth === 'function'\n        ? options.beforeShowMonth\n        : undefined;\n    }\n  }\n\n  // Update view's settings to reflect the viewDate set on the picker\n  updateFocus() {\n    const viewDate = new Date(this.picker.viewDate);\n    this.year = viewDate.getFullYear();\n    this.focused = viewDate.getMonth();\n  }\n\n  // Update view's settings to reflect the selected dates\n  updateSelection() {\n    const {dates, rangepicker} = this.picker.datepicker;\n    this.selected = dates.reduce((selected, timeValue) => {\n      const date = new Date(timeValue);\n      const year = date.getFullYear();\n      const month = date.getMonth();\n      if (selected[year] === undefined) {\n        selected[year] = [month];\n      } else {\n        pushUnique(selected[year], month);\n      }\n      return selected;\n    }, {});\n    if (rangepicker && rangepicker.dates) {\n      this.range = rangepicker.dates.map(timeValue => {\n        const date = new Date(timeValue);\n        return isNaN(date) ? undefined : [date.getFullYear(), date.getMonth()];\n      });\n    }\n  }\n\n  // Update the entire view UI\n  render() {\n    // refresh disabled months on every render in order to clear the ones added\n    // by beforeShow hook at previous render\n    // this.disabled = [...this.datesDisabled];\n    this.disabled = this.datesDisabled.reduce((arr, disabled) => {\n      const dt = new Date(disabled);\n      if (this.year === dt.getFullYear()) {\n        arr.push(dt.getMonth());\n      }\n      return arr;\n    }, []);\n\n    this.picker.setViewSwitchLabel(this.year);\n    this.picker.setPrevBtnDisabled(this.year <= this.minYear);\n    this.picker.setNextBtnDisabled(this.year >= this.maxYear);\n\n    const selected = this.selected[this.year] || [];\n    const yrOutOfRange = this.year < this.minYear || this.year > this.maxYear;\n    const isMinYear = this.year === this.minYear;\n    const isMaxYear = this.year === this.maxYear;\n    const range = computeMonthRange(this.range, this.year);\n\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      const date = dateValue(this.year, index, 1);\n\n      el.className = `datepicker-cell ${this.cellClass}`;\n      if (this.isMinView) {\n        el.dataset.date = date;\n      }\n      // reset text on every render to clear the custom content set\n      // by beforeShow hook at previous render\n      el.textContent = this.monthNames[index];\n\n      if (\n        yrOutOfRange\n        || isMinYear && index < this.minMonth\n        || isMaxYear && index > this.maxMonth\n        || this.disabled.includes(index)\n      ) {\n        classList.add('disabled');\n      }\n      if (range) {\n        const [rangeStart, rangeEnd] = range;\n        if (index > rangeStart && index < rangeEnd) {\n          classList.add('range');\n        }\n        if (index === rangeStart) {\n          classList.add('range-start');\n        }\n        if (index === rangeEnd) {\n          classList.add('range-end');\n        }\n      }\n      if (selected.includes(index)) {\n        classList.add('selected');\n      }\n      if (index === this.focused) {\n        classList.add('focused');\n      }\n\n      if (this.beforeShow) {\n        this.performBeforeHook(el, index, date);\n      }\n    });\n  }\n\n  // Update the view UI by applying the changes of selected and focused items\n  refresh() {\n    const selected = this.selected[this.year] || [];\n    const [rangeStart, rangeEnd] = computeMonthRange(this.range, this.year) || [];\n    this.grid\n      .querySelectorAll('.range, .range-start, .range-end, .selected, .focused')\n      .forEach((el) => {\n        el.classList.remove('range', 'range-start', 'range-end', 'selected', 'focused');\n      });\n    Array.from(this.grid.children).forEach((el, index) => {\n      const classList = el.classList;\n      if (index > rangeStart && index < rangeEnd) {\n        classList.add('range');\n      }\n      if (index === rangeStart) {\n        classList.add('range-start');\n      }\n      if (index === rangeEnd) {\n        classList.add('range-end');\n      }\n      if (selected.includes(index)) {\n        classList.add('selected');\n      }\n      if (index === this.focused) {\n        classList.add('focused');\n      }\n    });\n  }\n\n  // Update the view UI by applying the change of focused item\n  refreshFocus() {\n    this.grid.querySelectorAll('.focused').forEach((el) => {\n      el.classList.remove('focused');\n    });\n    this.grid.children[this.focused].classList.add('focused');\n  }\n}"],"names":["computeMonthRange","range","thisYear","startY","startM","endY","endM","MonthsView","View","picker","options","onConstruction","parseHTML","createTagRepeat","ix","hasProperty","minDateObj","maxDateObj","dateValue","viewDate","dates","rangepicker","selected","timeValue","date","year","month","pushUnique","arr","disabled","dt","yrOutOfRange","isMinYear","isMaxYear","el","index","classList","rangeStart","rangeEnd"],"mappings":"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"}