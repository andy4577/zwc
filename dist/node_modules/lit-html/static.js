import { html as h } from "./lit-html.js";
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const p = Symbol.for(""), d = (t) => {
  if ((t == null ? void 0 : t.r) === p)
    return t == null ? void 0 : t._$litStatic$;
}, v = (t, ...i) => ({ _$litStatic$: i.reduce((l, o, r) => l + ((a) => {
  if (a._$litStatic$ !== void 0)
    return a._$litStatic$;
  throw Error(`Value passed to 'literal' function must be a 'literal' result: ${a}. Use 'unsafeStatic' to pass non-literal values, but
            take care to ensure page security.`);
})(o) + t[r + 1], t[0]), r: p }), f = /* @__PURE__ */ new Map(), S = (t) => (i, ...l) => {
  const o = l.length;
  let r, a;
  const s = [], u = [];
  let n, e = 0, c = !1;
  for (; e < o; ) {
    for (n = i[e]; e < o && (a = l[e], (r = d(a)) !== void 0); )
      n += r + i[++e], c = !0;
    u.push(a), s.push(n), e++;
  }
  if (e === o && s.push(i[o]), c) {
    const $ = s.join("$$lit$$");
    (i = f.get($)) === void 0 && (s.raw = s, f.set($, i = s)), l = u;
  }
  return t(i, ...l);
}, w = S(h);
export {
  w as html,
  v as literal,
  S as withStatic
};
//# sourceMappingURL=static.js.map
