{"version":3,"file":"zwc-datepicker.cjs","sources":["../../../../../../src/components/zwc-datepicker/zwc-datepicker.ts"],"sourcesContent":["import { customElement, property, query, state } from 'lit/decorators.js';\r\nimport { html, PropertyValueMap, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { Datepicker } from 'vanillajs-datepicker';\r\n\r\nimport { Base } from '../base';\r\nimport type { DatepickerOptions } from './Datepicker';\r\n\r\n@customElement('zwc-datepicker')\r\nexport class ZwcDatepicker extends Base {\r\n  @property({ type: Boolean, attribute: 'float-label' })\r\n  floatLabel = false;\r\n\r\n  @property({ type: Boolean, attribute: 'has-error' })\r\n  hasError = false;\r\n\r\n  @property({ type: Boolean, attribute: 'disabled' })\r\n  disabled = false;\r\n\r\n  @property({ type: Boolean })\r\n  shape = false;\r\n\r\n  // Datepicker props\r\n  @property({ type: String })\r\n  placeholder = '';\r\n\r\n  @property({ type: String, attribute: 'format' })\r\n  dateFormat = 'dd/mm/yyyy';\r\n\r\n  @property({ type: Boolean, attribute: 'today-highlight' })\r\n  dataTodayHighlight = false;\r\n\r\n  @property({ type: String, attribute: 'language' })\r\n  dataLanguage = 'en';\r\n\r\n  @property({ type: Object })\r\n  locales: Record<string, any>[] | null = null;\r\n\r\n  @property({ type: Boolean, attribute: 'auto-hide' })\r\n  dataAutohide = false;\r\n\r\n  @property({ type: Boolean, attribute: 'calendar-weeks' })\r\n  dataShowCalendarWeeks = false;\r\n\r\n  @property({ type: Object, attribute: 'datepicker-options' })\r\n  datepickerOptions: DatepickerOptions = {};\r\n\r\n  // Label prop\r\n  @property({ type: String, attribute: 'label' })\r\n  labelText = 'Label Text';\r\n\r\n  // Ref\r\n  @query('input')\r\n  private inputField!: HTMLInputElement;\r\n\r\n  @state()\r\n  private isNotEmpty = false;\r\n\r\n  @state()\r\n  private isActive = false;\r\n\r\n  private datepickerInstance: Datepicker | null = null;\r\n\r\n  private get options(): DatepickerOptions {\r\n    return {\r\n      autohide: this.dataAutohide,\r\n      format: this.dateFormat,\r\n      todayHighlight: this.dataTodayHighlight,\r\n      orientation: 'bottom left',\r\n      language: this.dataLanguage,\r\n      ...this.datepickerOptions,\r\n    };\r\n  }\r\n\r\n  protected override render(): TemplateResult {\r\n    const classes = {\r\n      textfield: true,\r\n      disabled: this.disabled,\r\n      'textfield-datepicker': true,\r\n      'textfield--float-label': this.floatLabel,\r\n      'has-error': this.hasError,\r\n      'datepicker-active': this.isActive,\r\n      'is-not-empty': this.isNotEmpty || this.isActive,\r\n    };\r\n\r\n    return html` <div class=\"${classMap(classes)}\">\r\n      ${this.shape\r\n        ? html` <div class=\"datepicker-wrapper\">\r\n            ${this.renderInputText()}\r\n            <span class=\"icon icon--communication-calendar-end_outline\"></span>\r\n          </div>`\r\n        : html` ${this.renderInputText()}\r\n            <span\r\n              class=\"icon icon--communication-calendar-end_outline\"\r\n            ></span>`}\r\n      ${this.renderLabel()} ${this.renderHelper()}\r\n    </div>`;\r\n  }\r\n\r\n  protected firstUpdated(): void {\r\n    if (this.inputField) {\r\n      if (this.locales) {\r\n        Object.assign(Datepicker.locales, ...this.locales);\r\n      }\r\n      this.datepickerInstance = new Datepicker(this.inputField, this.options);\r\n\r\n      this.inputField.addEventListener('show', () => (this.isActive = true));\r\n      this.inputField.addEventListener('hide', () => (this.isActive = false));\r\n\r\n      this.setRoleAttr(this.datepickerInstance, 'button');\r\n    }\r\n  }\r\n\r\n  // Setting role='button' on all the day cells of calendar WAI-ARIA compliance;\r\n  setRoleAttr(datepickerInstance: Datepicker, role: string) {\r\n    const collection: HTMLCollection =\r\n      datepickerInstance.picker.element.querySelectorAll('.datepicker-cell');\r\n    Array.from(collection).forEach(day => day.setAttribute('role', role));\r\n  }\r\n\r\n  protected willUpdate(\r\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>,\r\n  ): void {\r\n    // Set dynamically language option on datepicker instance\r\n    if (\r\n      _changedProperties.has('dataLanguage') &&\r\n      _changedProperties.get('dataLanguage')\r\n    ) {\r\n      if (Object.keys(Datepicker.locales).includes(this.dataLanguage)) {\r\n        this.datepickerInstance?.setOptions({ language: this.dataLanguage });\r\n      } else {\r\n        console.error(\r\n          'You are trying to set language that is not available in your locales %o',\r\n          Datepicker?.locales,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  protected renderInputText(): TemplateResult {\r\n    const classes = {\r\n      'textfield-control': true,\r\n      'is-not-empty': this.isNotEmpty,\r\n    };\r\n\r\n    return html` <input\r\n      type=\"text\"\r\n      id=\"datepicker-calendar\"\r\n      name=\"date-01\"\r\n      class=\"${classMap(classes)}\"\r\n      value=\"\"\r\n      role=\"combobox\"\r\n      inputmode=\"none\"\r\n      ?disabled=\"${this.disabled}\"\r\n      .placeholder=\"${this.placeholder}\"\r\n      autocomplete=\"off\"\r\n      aria-label=\"Date:\"\r\n      aria-expanded=\"false\"\r\n      aria-haspopup=\"dialog\"\r\n      aria-controls=\"cb-dialog-1\"\r\n      aria-describedby=\"datepicker-calendar\"\r\n      @changeDate=\"${this.emitChangeDate}\"\r\n      @changeMonth=\"${this.emitChangeMonth}\"\r\n      @changeView=\"${this.emitChangeView}\"\r\n      @changeYear=\"${this.emitChangeYear}\"\r\n      @hide=\"${this.emitHide}\"\r\n      @show=\"${this.emitShow}\"\r\n    />`;\r\n  }\r\n\r\n  // On destroy\r\n  public disconnectedCallback(): void {\r\n    this.datepickerInstance?.destroy();\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  emitShow(e: CustomEvent): void {\r\n    this.dispatchEvent(\r\n      new CustomEvent('show', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  emitHide(e: CustomEvent): void {\r\n    this.dispatchEvent(\r\n      new CustomEvent('hide', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  emitChangeYear(e: CustomEvent): void {\r\n    this.dispatchEvent(\r\n      new CustomEvent('changeYear', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  emitChangeView(e: CustomEvent): void {\r\n    this.dispatchEvent(\r\n      new CustomEvent('changeView', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  emitChangeMonth(e: CustomEvent): void {\r\n    this.dispatchEvent(\r\n      new CustomEvent('changeMonth', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  emitChangeDate(e: CustomEvent): void {\r\n    this.isNotEmpty = this.setInputBoolean(e);\r\n    this.dispatchEvent(\r\n      new CustomEvent('changeDate', {\r\n        composed: true,\r\n        cancelable: true,\r\n        bubbles: true,\r\n        detail: e.detail,\r\n      }),\r\n    );\r\n  }\r\n\r\n  protected renderLabel(): TemplateResult {\r\n    return html` <label\r\n      class=\"textfield-label\"\r\n      for=\"datepicker-calendar\"\r\n      id=\"date-format-description\"\r\n    >\r\n      ${this.labelText}\r\n    </label>`;\r\n  }\r\n\r\n  protected renderHelper(): TemplateResult {\r\n    return html`<span class=\"textfield-helper\">${this.dateFormat}</span>`;\r\n  }\r\n\r\n  private setInputBoolean(e: CustomEvent): boolean {\r\n    return e.detail?.date !== undefined;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-datepicker': ZwcDatepicker;\r\n  }\r\n}\r\n"],"names":["ZwcDatepicker","Base","classes","html","classMap","Datepicker","datepickerInstance","role","collection","day","_changedProperties","_a","__decorateClass","property","query","state","customElement"],"mappings":"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"}