{"version":3,"file":"zwc-chart-bar.js","sources":["../../../../../../src/components/zwc-chart-bar/zwc-chart-bar.ts"],"sourcesContent":["import { customElement, property } from 'lit/decorators.js';\r\n\r\nimport type {\r\n  ChartComponentLike,\r\n  ChartData,\r\n  ChartOptions,\r\n  DefaultDataPoint,\r\n  Plugin,\r\n} from 'chart.js';\r\n\r\nimport {\r\n  Chart,\r\n  Colors,\r\n  BarController,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Legend,\r\n  Tooltip,\r\n  Title,\r\n  SubTitle,\r\n} from 'chart.js';\r\n\r\nimport { ZwcBaseChart } from '../zwc-chart-base';\r\nimport { PropertyValues } from 'lit';\r\nimport { isSameData } from '../../utils';\r\n\r\nexport type TBar = 'bar';\r\n\r\n@customElement('zwc-chart-bar')\r\nexport class ZwcChartBar extends ZwcBaseChart {\r\n  componentsToRegister: ChartComponentLike[] = [\r\n    Colors as ChartComponentLike,\r\n    BarController,\r\n    BarElement,\r\n    CategoryScale,\r\n    LinearScale,\r\n    Legend,\r\n    Tooltip,\r\n    Title,\r\n    SubTitle,\r\n  ];\r\n\r\n  type: TBar = 'bar';\r\n\r\n  // Default Bar Chart options.\r\n  defaultOptions: ChartOptions<TBar> = {\r\n    animation: {\r\n      duration: 2000,\r\n    },\r\n    plugins: {\r\n      legendMargin: {\r\n        margin: 20,\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        align: 'start',\r\n        labels: {\r\n          usePointStyle: true,\r\n        },\r\n      },\r\n      tooltip: {\r\n        mode: 'point',\r\n        intersect: false,\r\n        // spriteText: use white background to hide any gaps between fonts\r\n        backgroundColor: '#edeef0',\r\n        titleColor: 'black',\r\n        titleAlign: 'center',\r\n        bodyColor: 'black',\r\n        bodyAlign: 'center',\r\n        footerColor: 'black',\r\n        footerAlign: 'center',\r\n        position: 'nearest',\r\n        xAlign: 'center',\r\n        yAlign: 'bottom',\r\n      },\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top: 20,\r\n        left: 20,\r\n        right: 20,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    elements: {\r\n      bar: {\r\n        backgroundColor: ['#0f67c0'],\r\n        borderRadius: Number.MAX_VALUE,\r\n        borderSkipped: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          display: true,\r\n        },\r\n        border: {\r\n          color: '#929a9c',\r\n          width: 1,\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          display: true,\r\n        },\r\n        grid: {\r\n          color: '#f7f8f7',\r\n          drawTicks: false,\r\n          lineWidth: 2,\r\n        },\r\n        border: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  @property()\r\n  plugins: Plugin<TBar>[] = [];\r\n\r\n  @property({ type: Object })\r\n  options: ChartOptions<TBar> = {};\r\n\r\n  @property({\r\n    type: Object,\r\n    hasChanged: (value?: ChartData<TBar>, oldValue?: ChartData<TBar>) => {\r\n      return !isSameData(value, oldValue);\r\n    },\r\n  })\r\n  data: ChartData<TBar> = {\r\n    labels: [2010, 2011, 2012],\r\n    datasets: [\r\n      {\r\n        label: 'Sample chart',\r\n        data: [15, 20, null],\r\n        maxBarThickness: 32,\r\n      },\r\n    ],\r\n  };\r\n\r\n  updated(changed: PropertyValues<this>): void {\r\n    if (changed.has('data') && changed.get('data')) {\r\n      if (this.chart) {\r\n        const { labels, dataSetsDiff } = this.handleDataChange(\r\n          this.chart,\r\n          this.data,\r\n        );\r\n\r\n        if (labels) this.chart?.data.labels?.push(...labels);\r\n\r\n        this.chart?.data.datasets.forEach((dataset, index) => {\r\n          if (dataSetsDiff[index]) {\r\n            dataset.data.push(...dataSetsDiff[index]);\r\n          }\r\n        });\r\n\r\n        this.chart.update('normal');\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDataChange(chart: Chart, newData: ChartData<TBar>) {\r\n    const index = chart.data.labels?.length ?? 0;\r\n    const direction = newData.labels?.length\r\n      ? newData.labels.length - index\r\n      : 0 - index;\r\n\r\n    let labels: unknown[] = [];\r\n    let dataSetsDiff: DefaultDataPoint<TBar>[] = [];\r\n\r\n    if (direction === 0) {\r\n      // TODO check with datasets length;\r\n    } else if (direction > 0) {\r\n      // adding data\r\n      labels = newData.labels ? newData.labels.slice(index ?? 0) : [];\r\n      const dataPoints = labels.length;\r\n\r\n      dataSetsDiff = newData.datasets.map(dataset =>\r\n        dataset.data.slice(-dataPoints),\r\n      );\r\n    } else if (direction < 0) {\r\n      // removing data\r\n      chart.data.labels?.pop();\r\n      chart.data.datasets.forEach(set => set.data.pop());\r\n    }\r\n    return { labels, dataSetsDiff, direction };\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-chart-bar': ZwcChartBar;\r\n  }\r\n}\r\n"],"names":["ZwcChartBar","ZwcBaseChart","Colors","BarController","BarElement","CategoryScale","LinearScale","Legend","Tooltip","Title","SubTitle","changed","labels","dataSetsDiff","_b","_a","_c","dataset","index","chart","newData","direction","dataPoints","_d","set","__decorateClass","property","value","oldValue","isSameData","customElement"],"mappings":"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"}