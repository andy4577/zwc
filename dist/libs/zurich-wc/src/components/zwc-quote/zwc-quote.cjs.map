{"version":3,"file":"zwc-quote.cjs","sources":["../../../../../../src/components/zwc-quote/zwc-quote.ts"],"sourcesContent":["import { customElement, property, query, state } from 'lit/decorators.js';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { Base } from '../base/base';\r\nimport type { ZwcTemplate } from '../shared/zwc-template/zwc-template';\r\n\r\ntype PictureData = {\r\n  src: string;\r\n  alt: string;\r\n};\r\n\r\n@customElement('zwc-quote')\r\nexport class ZwcQuote extends Base {\r\n  @state()\r\n  data = '';\r\n\r\n  @property({ type: String, attribute: 'text' })\r\n  quoteText = '';\r\n\r\n  @property({ type: String, attribute: 'author' })\r\n  author = '';\r\n\r\n  @property({ type: String, attribute: 'title' })\r\n  title = '';\r\n\r\n  @property({ type: Boolean, attribute: 'author-info' })\r\n  showAuthorInfo = false;\r\n\r\n  @property({ type: Boolean, attribute: 'author-image' })\r\n  showAuthorImage = false;\r\n\r\n  @property({ type: Boolean, attribute: 'inverted' })\r\n  hasInvertedContent = false;\r\n\r\n  @property({ type: String, attribute: 'background-class' })\r\n  background = '';\r\n\r\n  @property({ type: Object })\r\n  picture: PictureData = { src: '', alt: '' };\r\n\r\n  @query('zwc-template')\r\n  content!: ZwcTemplate;\r\n\r\n  render(): TemplateResult {\r\n    const classes = {\r\n      'quote-inner': true,\r\n      [`${this.background}`]: this.background,\r\n      inverted: this.hasInvertedContent,\r\n    };\r\n\r\n    return html`\r\n      <div class=${classMap(classes)}>\r\n        <span class=\"icon icon--communication-quote-closed_solid\"></span>\r\n        <blockquote class=\"quote\">&#8220;${this.quoteText}&#8222;</blockquote>\r\n        ${this.showAuthorInfo\r\n          ? html`<p class=\"quote-author caption-large\">${this.author}</p>\r\n              <p class=\"quote-author-title caption-small\">${this.title}</p>`\r\n          : ''}\r\n        ${this.showAuthorImage\r\n          ? html` <img\r\n              class=\"img-rounded img-100\"\r\n              .src=${this.picture.src}\r\n              .alt=${this.picture.alt}\r\n            />`\r\n          : ''}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-quote': ZwcQuote;\r\n  }\r\n}\r\n"],"names":["ZwcQuote","Base","classes","html","classMap","__decorateClass","state","property","query","customElement"],"mappings":"ikCAYaA,QAAA,SAAN,cAAuBC,EAAAA,IAAK,CAA5B,aAAA,CAAA,MAAA,GAAA,SAAA,EAEE,KAAA,KAAA,GAGK,KAAA,UAAA,GAGH,KAAA,OAAA,GAGD,KAAA,MAAA,GAGS,KAAA,eAAA,GAGC,KAAA,gBAAA,GAGG,KAAA,mBAAA,GAGR,KAAA,WAAA,GAGb,KAAA,QAAuB,CAAE,IAAK,GAAI,IAAK,GAAG,CAK1C,QAAyB,CACvB,MAAMC,EAAU,CACd,cAAe,GACf,CAAC,GAAG,KAAK,cAAe,KAAK,WAC7B,SAAU,KAAK,kBAAA,EAGV,OAAAC;mBACQC,EAAAA,SAASF,CAAO;AAAA;AAAA,2CAEQ,KAAK;AAAA,UACtC,KAAK,eACHC,EAAAA,6CAA6C,KAAK;AAAA,4DACF,KAAK,YACrD;AAAA,UACF,KAAK,gBACHA;;qBAES,KAAK,QAAQ;AAAA,qBACb,KAAK,QAAQ;AAAA,gBAEtB;AAAA;AAAA,KAGV,CACF,EAtDEE,EAAA,CADCC,QAAM,CAAA,EADIN,iBAEX,UAAA,OAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,OAAQ,UAAW,OAAQ,CAAA,EAJlCP,iBAKX,UAAA,YAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,OAAQ,UAAW,SAAU,CAAA,EAPpCP,iBAQX,UAAA,SAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,OAAQ,UAAW,QAAS,CAAA,EAVnCP,iBAWX,UAAA,QAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,QAAS,UAAW,cAAe,CAAA,EAb1CP,iBAcX,UAAA,iBAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,QAAS,UAAW,eAAgB,CAAA,EAhB3CP,iBAiBX,UAAA,kBAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,QAAS,UAAW,WAAY,CAAA,EAnBvCP,iBAoBX,UAAA,qBAAA,CAAA,EAGAK,EAAA,CADCE,EAAAA,SAAS,CAAE,KAAM,OAAQ,UAAW,mBAAoB,CAAA,EAtB9CP,iBAuBX,UAAA,aAAA,CAAA,EAGAK,EAAA,CADCE,WAAS,CAAE,KAAM,OAAQ,CAAA,EAzBfP,iBA0BX,UAAA,UAAA,CAAA,EAGAK,EAAA,CADCG,EAAAA,MAAM,cAAc,CAAA,EA5BVR,iBA6BX,UAAA,UAAA,CAAA,EA7BWA,QAAN,SAAAK,EAAA,CADNI,EAAAA,cAAc,WAAW,CAAA,EACbT,gBAAA"}