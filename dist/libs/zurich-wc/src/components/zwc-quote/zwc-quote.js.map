{"version":3,"file":"zwc-quote.js","sources":["../../../../../../src/components/zwc-quote/zwc-quote.ts"],"sourcesContent":["import { customElement, property, query, state } from 'lit/decorators.js';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { Base } from '../base/base';\r\nimport type { ZwcTemplate } from '../shared/zwc-template/zwc-template';\r\n\r\ntype PictureData = {\r\n  src: string;\r\n  alt: string;\r\n};\r\n\r\n@customElement('zwc-quote')\r\nexport class ZwcQuote extends Base {\r\n  @state()\r\n  data = '';\r\n\r\n  @property({ type: String, attribute: 'text' })\r\n  quoteText = '';\r\n\r\n  @property({ type: String, attribute: 'author' })\r\n  author = '';\r\n\r\n  @property({ type: String, attribute: 'title' })\r\n  title = '';\r\n\r\n  @property({ type: Boolean, attribute: 'author-info' })\r\n  showAuthorInfo = false;\r\n\r\n  @property({ type: Boolean, attribute: 'author-image' })\r\n  showAuthorImage = false;\r\n\r\n  @property({ type: Boolean, attribute: 'inverted' })\r\n  hasInvertedContent = false;\r\n\r\n  @property({ type: String, attribute: 'background-class' })\r\n  background = '';\r\n\r\n  @property({ type: Object })\r\n  picture: PictureData = { src: '', alt: '' };\r\n\r\n  @query('zwc-template')\r\n  content!: ZwcTemplate;\r\n\r\n  render(): TemplateResult {\r\n    const classes = {\r\n      'quote-inner': true,\r\n      [`${this.background}`]: this.background,\r\n      inverted: this.hasInvertedContent,\r\n    };\r\n\r\n    return html`\r\n      <div class=${classMap(classes)}>\r\n        <span class=\"icon icon--communication-quote-closed_solid\"></span>\r\n        <blockquote class=\"quote\">&#8220;${this.quoteText}&#8222;</blockquote>\r\n        ${this.showAuthorInfo\r\n          ? html`<p class=\"quote-author caption-large\">${this.author}</p>\r\n              <p class=\"quote-author-title caption-small\">${this.title}</p>`\r\n          : ''}\r\n        ${this.showAuthorImage\r\n          ? html` <img\r\n              class=\"img-rounded img-100\"\r\n              .src=${this.picture.src}\r\n              .alt=${this.picture.alt}\r\n            />`\r\n          : ''}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-quote': ZwcQuote;\r\n  }\r\n}\r\n"],"names":["ZwcQuote","Base","classes","html","classMap","__decorateClass","state","property","query","customElement"],"mappings":";;;;;;;;;;;;;;;AAYa,IAAAA,IAAN,cAAuBC,EAAK;AAAA,EAA5B,cAAA;AAAA,UAAA,GAAA,SAAA,GAEE,KAAA,OAAA,IAGK,KAAA,YAAA,IAGH,KAAA,SAAA,IAGD,KAAA,QAAA,IAGS,KAAA,iBAAA,IAGC,KAAA,kBAAA,IAGG,KAAA,qBAAA,IAGR,KAAA,aAAA,IAGb,KAAA,UAAuB,EAAE,KAAK,IAAI,KAAK;EAAG;AAAA,EAK1C,SAAyB;AACvB,UAAMC,IAAU;AAAA,MACd,eAAe;AAAA,MACf,CAAC,GAAG,KAAK,eAAe,KAAK;AAAA,MAC7B,UAAU,KAAK;AAAA,IAAA;AAGV,WAAAC;AAAAA,mBACQC,EAASF,CAAO;AAAA;AAAA,2CAEQ,KAAK;AAAA,UACtC,KAAK,iBACHC,0CAA6C,KAAK;AAAA,4DACF,KAAK,cACrD;AAAA,UACF,KAAK,kBACHA;AAAAA;AAAAA,qBAES,KAAK,QAAQ;AAAA,qBACb,KAAK,QAAQ;AAAA,kBAEtB;AAAA;AAAA;AAAA,EAGV;AACF;AAtDEE,EAAA;AAAA,EADCC,EAAM;AAAA,GADIN,EAEX,WAAA,QAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,QAAQ;AAAA,GAJlCP,EAKX,WAAA,aAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,UAAU;AAAA,GAPpCP,EAQX,WAAA,UAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,SAAS;AAAA,GAVnCP,EAWX,WAAA,SAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,eAAe;AAAA,GAb1CP,EAcX,WAAA,kBAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,gBAAgB;AAAA,GAhB3CP,EAiBX,WAAA,mBAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,WAAW,YAAY;AAAA,GAnBvCP,EAoBX,WAAA,sBAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ,WAAW,oBAAoB;AAAA,GAtB9CP,EAuBX,WAAA,cAAA,CAAA;AAGAK,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,QAAQ;AAAA,GAzBfP,EA0BX,WAAA,WAAA,CAAA;AAGAK,EAAA;AAAA,EADCG,EAAM,cAAc;AAAA,GA5BVR,EA6BX,WAAA,WAAA,CAAA;AA7BWA,IAANK,EAAA;AAAA,EADNI,EAAc,WAAW;AAAA,GACbT,CAAA;"}