{"version":3,"file":"deepMerge.js","sources":["../../../../../src/utils/deepMerge.ts"],"sourcesContent":["export const deepMerge = <T extends Record<string, any>>(\r\n  target: T,\r\n  source: T,\r\n): T => {\r\n  const isObject = (obj: any) => obj && typeof obj === 'object';\r\n  const isArray = (arr: any) => Array.isArray(arr);\r\n\r\n  if (!isObject(target) || !isObject(source)) {\r\n    return source;\r\n  }\r\n\r\n  Object.keys(source).forEach(key => {\r\n    const targetValue = target[key];\r\n    const sourceValue = source[key];\r\n\r\n    if (isArray(targetValue) && isArray(sourceValue)) {\r\n      target[key as keyof T] = targetValue.concat(sourceValue);\r\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\r\n      target[key as keyof T] = deepMerge(\r\n        Object.assign({}, targetValue),\r\n        sourceValue,\r\n      );\r\n    } else {\r\n      target[key as keyof T] = sourceValue;\r\n    }\r\n  });\r\n\r\n  return target;\r\n};\r\n"],"names":["deepMerge","target","source","isObject","obj","isArray","arr","key","targetValue","sourceValue"],"mappings":"AAAa,MAAAA,IAAY,CACvBC,GACAC,MACM;AACN,QAAMC,IAAW,CAACC,MAAaA,KAAO,OAAOA,KAAQ,UAC/CC,IAAU,CAACC,MAAa,MAAM,QAAQA,CAAG;AAE/C,SAAI,CAACH,EAASF,CAAM,KAAK,CAACE,EAASD,CAAM,IAChCA,KAGT,OAAO,KAAKA,CAAM,EAAE,QAAQ,CAAOK,MAAA;AACjC,UAAMC,IAAcP,EAAOM,IACrBE,IAAcP,EAAOK;AAE3B,IAAIF,EAAQG,CAAW,KAAKH,EAAQI,CAAW,IACtCR,EAAAM,KAAkBC,EAAY,OAAOC,CAAW,IAC9CN,EAASK,CAAW,KAAKL,EAASM,CAAW,IACtDR,EAAOM,KAAkBP;AAAA,MACvB,OAAO,OAAO,CAAC,GAAGQ,CAAW;AAAA,MAC7BC;AAAA,IAAA,IAGFR,EAAOM,KAAkBE;AAAA,EAC3B,CACD,GAEMR;AACT;"}