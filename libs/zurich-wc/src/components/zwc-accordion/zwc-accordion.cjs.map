{"version":3,"file":"zwc-accordion.cjs","sources":["../../../../../../src/components/zwc-accordion/zwc-accordion.ts"],"sourcesContent":["import { customElement, property, queryAll } from 'lit/decorators.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { repeat } from 'lit/directives/repeat.js';\r\n\r\nimport { Base } from '../base'\r\nimport { slideToggle } from '../../utils/animation';\r\n\r\ntype Position = 'left' | 'right';\r\ninterface AccordionItem {\r\n  key: string;\r\n  title: string;\r\n  bodyText: string;\r\n}\r\n\r\n@customElement('zwc-accordion')\r\nexport class ZwcAccordion extends Base {\r\n  @property({ type: String, attribute: 'icon-position' })\r\n  iconPosition: Position = 'left';\r\n\r\n  @property({ type: Boolean, attribute: 'open-multiple' })\r\n  openMultiple = false;\r\n\r\n  @property({\r\n    type: Object,\r\n    converter: {\r\n      fromAttribute(value: string | null) {\r\n        let data: AccordionItem[];\r\n        if (value) {\r\n          try {\r\n            data = JSON.parse(value);\r\n            return data;\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        }\r\n        return null;\r\n      },\r\n    },\r\n  })\r\n  data: AccordionItem[] = [];\r\n\r\n  @queryAll('div.active')\r\n  activeDivs!: NodeListOf<HTMLDivElement>;\r\n\r\n  protected render(): TemplateResult {\r\n    const classes = {\r\n      accordion: true,\r\n      [`accordion--icon-${this.iconPosition}`]: true,\r\n    };\r\n\r\n    return html`\r\n      <div\r\n        class=${classMap(classes)}\r\n        ?data-open-multiple=${this.openMultiple}\r\n        @click=${this.clickHandler}\r\n      >\r\n        ${repeat(\r\n          this.data,\r\n          item => item.key,\r\n          item => this.renderAccordionItem(item),\r\n        )}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderAccordionItem(item: AccordionItem): TemplateResult {\r\n    const { key, title, bodyText } = item;\r\n\r\n    return html`\r\n      <div class=\"accordion-item\">\r\n        <h5 class=\"accordion-header\">\r\n          <button\r\n            class=\"accordion-button\"\r\n            type=\"button\"\r\n            aria-expanded=\"false\"\r\n            aria-controls=\"item-${key}\"\r\n          >\r\n            ${title}\r\n          </button>\r\n        </h5>\r\n        <div id=\"item-${key}\" class=\"accordion-body\">\r\n          <p>${bodyText}</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private clickHandler(e: Event): void {\r\n    if (e.target === null || (e.target as HTMLElement)?.nodeName !== 'BUTTON')\r\n      return;\r\n\r\n    const button = e.target as HTMLButtonElement;\r\n    const accordionItem = this.getAccordionItem(button);\r\n\r\n    if (accordionItem?.classList.contains('active')) {\r\n      this.closeItem(accordionItem, button);\r\n    } else if (accordionItem) {\r\n      if (!this.openMultiple) {\r\n        if (this.activeDivs.length > 0) {\r\n          this.closeAll(this.activeDivs);\r\n        }\r\n      }\r\n\r\n      this.openItem(accordionItem, button);\r\n    }\r\n  }\r\n\r\n  private closeAll(divsActive: NodeListOf<HTMLDivElement>) {\r\n    divsActive.forEach(node => {\r\n      const button = node.querySelector(\r\n        '.accordion-button',\r\n      ) as HTMLButtonElement;\r\n\r\n      if (button) {\r\n        this.closeItem(node, button);\r\n      }\r\n    });\r\n  }\r\n\r\n  private closeItem(accordionItem: HTMLDivElement, button: HTMLButtonElement) {\r\n    button.setAttribute('area-expanded', 'false');\r\n    accordionItem.classList.remove('active');\r\n\r\n    const controlsId = button.getAttribute('aria-controls');\r\n    let accordionBody: HTMLDivElement | null;\r\n\r\n    if (accordionItem) {\r\n      accordionBody = accordionItem.querySelector(`#${controlsId}`);\r\n\r\n      if (accordionBody) {\r\n        slideToggle(accordionBody, 'up', 32);\r\n      }\r\n    }\r\n  }\r\n\r\n  private openItem(\r\n    accordionItem: HTMLDivElement,\r\n    button: HTMLButtonElement,\r\n  ): void {\r\n    button.setAttribute('aria-expanded', 'true');\r\n    accordionItem.classList.add('active');\r\n\r\n    const controlsId = button.getAttribute('aria-controls');\r\n    let accordionBody: HTMLDivElement | null;\r\n\r\n    if (accordionItem) {\r\n      accordionBody = accordionItem.querySelector(`#${controlsId}`);\r\n\r\n      if (accordionBody) {\r\n        slideToggle(accordionBody, 'down', 32);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getAccordionItem(item: HTMLElement): HTMLDivElement | null {\r\n    return item.parentNode?.parentNode as HTMLDivElement;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-accordion': ZwcAccordion;\r\n  }\r\n}\r\n"],"names":["ZwcAccordion","Base","classes","html","classMap","repeat","item","key","title","bodyText","e","_a","button","accordionItem","divsActive","node","controlsId","accordionBody","slideToggle","__decorateClass","property","value","data","queryAll","customElement"],"mappings":"4hBAgBaA,QAAA,aAAN,cAA2BC,EAAAA,IAAK,CAAhC,aAAA,CAAA,MAAA,GAAA,SAAA,EAEoB,KAAA,aAAA,OAGV,KAAA,aAAA,GAmBf,KAAA,KAAwB,EAAC,CAKf,QAAyB,CACjC,MAAMC,EAAU,CACd,UAAW,GACX,CAAC,mBAAmB,KAAK,gBAAiB,EAAA,EAGrC,OAAAC;;gBAEKC,EAAAA,SAASF,CAAO;AAAA,8BACF,KAAK;AAAA,iBAClB,KAAK;AAAA;AAAA,UAEZG,EAAA,OACA,KAAK,QACGC,EAAK,IACbA,GAAQ,KAAK,oBAAoBA,CAAI,CAAA;AAAA;AAAA,KAI7C,CAEQ,oBAAoBA,EAAqC,CAC/D,KAAM,CAAE,IAAAC,EAAK,MAAAC,EAAO,SAAAC,CAAA,EAAaH,EAE1B,OAAAH;;;;;;;kCAOuBI;AAAA;AAAA,cAEpBC;AAAA;AAAA;AAAA,wBAGUD;AAAA,eACTE;AAAA;AAAA;AAAA,KAIb,CAEQ,aAAaC,EAAgB,OACnC,GAAIA,EAAE,SAAW,QAASC,EAAAD,EAAE,SAAF,YAAAC,EAA0B,YAAa,SAC/D,OAEF,MAAMC,EAASF,EAAE,OACXG,EAAgB,KAAK,iBAAiBD,CAAM,EAE9CC,GAAA,MAAAA,EAAe,UAAU,SAAS,UAC/B,KAAA,UAAUA,EAAeD,CAAM,EAC3BC,IACJ,KAAK,cACJ,KAAK,WAAW,OAAS,GACtB,KAAA,SAAS,KAAK,UAAU,EAI5B,KAAA,SAASA,EAAeD,CAAM,EAEvC,CAEQ,SAASE,EAAwC,CACvDA,EAAW,QAAgBC,GAAA,CACzB,MAAMH,EAASG,EAAK,cAClB,mBAAA,EAGEH,GACG,KAAA,UAAUG,EAAMH,CAAM,CAC7B,CACD,CACH,CAEQ,UAAUC,EAA+BD,EAA2B,CACnEA,EAAA,aAAa,gBAAiB,OAAO,EAC9BC,EAAA,UAAU,OAAO,QAAQ,EAEjC,MAAAG,EAAaJ,EAAO,aAAa,eAAe,EAClD,IAAAK,EAEAJ,IACcI,EAAAJ,EAAc,cAAc,IAAIG,GAAY,EAExDC,GACUC,EAAAA,YAAAD,EAAe,KAAM,EAAE,EAGzC,CAEQ,SACNJ,EACAD,EACM,CACCA,EAAA,aAAa,gBAAiB,MAAM,EAC7BC,EAAA,UAAU,IAAI,QAAQ,EAE9B,MAAAG,EAAaJ,EAAO,aAAa,eAAe,EAClD,IAAAK,EAEAJ,IACcI,EAAAJ,EAAc,cAAc,IAAIG,GAAY,EAExDC,GACUC,EAAAA,YAAAD,EAAe,OAAQ,EAAE,EAG3C,CAEQ,iBAAiBX,EAA0C,OACjE,OAAOK,EAAAL,EAAK,aAAL,YAAAK,EAAiB,UAC1B,CACF,EA5IEQ,EAAA,CADCC,EAAAA,SAAS,CAAE,KAAM,OAAQ,UAAW,gBAAiB,CAAA,EAD3CpB,qBAEX,UAAA,eAAA,CAAA,EAGAmB,EAAA,CADCC,EAAAA,SAAS,CAAE,KAAM,QAAS,UAAW,gBAAiB,CAAA,EAJ5CpB,qBAKX,UAAA,eAAA,CAAA,EAmBAmB,EAAA,CAjBCC,WAAS,CACR,KAAM,OACN,UAAW,CACT,cAAcC,EAAsB,CAC9B,IAAAC,EACJ,GAAID,EACE,GAAA,CACK,OAAAC,EAAA,KAAK,MAAMD,CAAK,EAChBC,QACAZ,GACP,QAAQ,MAAMA,CAAC,CACjB,CAEK,OAAA,IACT,CACF,CAAA,CACD,CAAA,EAvBUV,qBAwBX,UAAA,OAAA,CAAA,EAGAmB,EAAA,CADCI,EAAAA,SAAS,YAAY,CAAA,EA1BXvB,qBA2BX,UAAA,aAAA,CAAA,EA3BWA,QAAN,aAAAmB,EAAA,CADNK,EAAAA,cAAc,eAAe,CAAA,EACjBxB,oBAAA"}