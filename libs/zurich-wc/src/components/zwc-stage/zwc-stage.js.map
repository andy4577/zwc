{"version":3,"file":"zwc-stage.js","sources":["../../../../../../src/components/zwc-stage/zwc-stage.ts"],"sourcesContent":["import { Base } from '../base/base';\r\n\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\n\r\n// components\r\nimport '../zwc-pictogram';\r\nimport '../zwc-promise-label';\r\nimport type { IPromise } from '../zwc-promise-label';\r\n\r\ntype StageType = 'image' | 'shape' | 'pictogram';\r\n\r\n@customElement('zwc-stage')\r\nexport class ZwcStage extends Base {\r\n  @property({\r\n    type: String,\r\n    converter: {\r\n      fromAttribute(value) {\r\n        if (\r\n          !(value === 'image' || value === 'shape' || value === 'pictogram')\r\n        ) {\r\n          console.error(\r\n            `<zwc-stage 'type=\"${value}\" ...> - is not valid attribute value, please provide \"image | shape | pictogram\"`,\r\n          );\r\n        }\r\n        return String(value);\r\n      },\r\n    },\r\n  })\r\n  type: StageType = 'image';\r\n\r\n  /**\r\n   * Sets image on left side when type=\"shape\"\r\n   */\r\n  @property({ type: Boolean })\r\n  reversed = false;\r\n\r\n  /** Sets inverted class on element */\r\n  @property({ type: Boolean })\r\n  inverted = false;\r\n\r\n  /** Align text left when type=\"shape\" */\r\n  @property({ type: Boolean, attribute: 'left-aligned' })\r\n  leftAligned = false;\r\n\r\n  /** Sets background class */\r\n  @property({ type: String })\r\n  background = '';\r\n\r\n  @property({ type: String })\r\n  preline = 'Pre line';\r\n\r\n  @property({ type: String })\r\n  headline = 'Head Line';\r\n\r\n  @property({ type: String })\r\n  pictogram = 'career-analysis';\r\n\r\n  @property({ type: Boolean, attribute: 'pictogram-dark' })\r\n  pictogramDark = false;\r\n\r\n  /** Sets src att when type=\"image | shape\" */\r\n  @property({ type: String, attribute: 'image-src' })\r\n  imageSrc = '';\r\n\r\n  @property({ type: String, attribute: 'promise-title' })\r\n  promiseTitle = 'Green';\r\n\r\n  @property({ type: String, attribute: 'promise-subtitle' })\r\n  promiseSubtitle = 'Promise';\r\n\r\n  @property({ type: String, attribute: 'promise-type' })\r\n  promiseType: IPromise = 'none';\r\n\r\n  get getImageSrc() {\r\n    if (this.type !== 'pictogram' && this.imageSrc === '') {\r\n      console.error(`image-src=\"value\" needs to be set.`);\r\n    }\r\n    return this.imageSrc;\r\n  }\r\n\r\n  protected renderPromise(): TemplateResult | string {\r\n    return this.promiseType !== 'none'\r\n      ? html` <zwc-promise\r\n          .title=${this.promiseTitle}\r\n          .subtitle=${this.promiseSubtitle}\r\n          .promise=${this.promiseType}\r\n          .inverted=${this.inverted}\r\n        ></zwc-promise>`\r\n      : '';\r\n  }\r\n\r\n  protected render(): TemplateResult {\r\n    const classes = {\r\n      ['stage-banner']: true,\r\n      [`stage-banner--${this.type}`]: true,\r\n      [`${this.background}`]: true,\r\n      reversed: this.reversed,\r\n      inverted: this.inverted,\r\n      'stage-banner--left': this.leftAligned,\r\n    };\r\n\r\n    return html`\r\n      <div class=${classMap(classes)}>\r\n        ${this.renderPromise()}\r\n        <div class=\"stage-banner-container\">\r\n          <div class=\"stage-banner-image\">\r\n            ${this.type === 'pictogram'\r\n              ? html`<zwc-pictogram\r\n                  .pictogram=\"${this.pictogram}\"\r\n                  ?dark=\"${this.pictogramDark}\"\r\n                ></zwc-pictogram>`\r\n              : html`<img src=${this.getImageSrc} alt=\"image\" /> `}\r\n          </div>\r\n          <div class=\"stage-banner-content\">\r\n            <p><strong>${this.preline}</strong></p>\r\n            <h1>${this.headline}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-stage': ZwcStage;\r\n  }\r\n}\r\n"],"names":["ZwcStage","Base","html","classes","classMap","__decorateClass","property","value","customElement"],"mappings":"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"}