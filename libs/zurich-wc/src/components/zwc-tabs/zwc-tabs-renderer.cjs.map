{"version":3,"file":"zwc-tabs-renderer.cjs","sources":["../../../../../../src/components/zwc-tabs/zwc-tabs-renderer.ts"],"sourcesContent":["import { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { repeat } from 'lit/directives/repeat.js';\r\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\r\n\r\nimport { Base } from '../base'\r\nimport '../zwc-icon';\r\nimport { TabData } from './zwc-tabs-template';\r\nimport { calcLeftOffsets, toggleHorizontalScrollArrows } from '../../utils/index';\r\n\r\nexport type TabsAlignment = 'stretch' | 'left' | 'center' | 'right';\r\n\r\n@customElement('zwc-tabs-renderer')\r\nexport class ZwcTabsRenderer extends Base {\r\n  @property({ type: Object })\r\n  tabsData: TabData[] = [];\r\n\r\n  @property({ type: String })\r\n  layout: TabsAlignment = 'stretch';\r\n\r\n  @property({ type: String })\r\n  icons = '';\r\n\r\n  @property({ type: Boolean })\r\n  scrollToTab = true;\r\n\r\n  @queryAll('.tabs-header > button')\r\n  headers!: NodeListOf<HTMLButtonElement>;\r\n\r\n  @queryAll('.tabs-content')\r\n  contentDivs!: NodeListOf<HTMLDivElement>;\r\n\r\n  @query('.tabs-header-wrapper')\r\n  tabsWrapper!: HTMLDivElement;\r\n\r\n  @query('.tabs-header')\r\n  tabsHeader!: HTMLDivElement;\r\n\r\n  currentTabIndex = 0;\r\n  nextTabIndex!: number;\r\n  prevTabIndex!: number;\r\n\r\n  protected override render(): TemplateResult {\r\n    const classes = {\r\n      tabs: true,\r\n      [`tabs--${this.layout}`]: true,\r\n      'tabs-icons': this.icons,\r\n    };\r\n\r\n    return html`\r\n      <div class=\"${classMap(classes)}\" ?data-scroll-to-tab=${this.scrollToTab}>\r\n        <nav>\r\n          <div class=\"tabs-header-wrapper\">\r\n            <span\r\n              class=\"slider-arrow slider-back icon icon--arrow-long-left_24\"\r\n              data-direction=\"back\"\r\n              @click=${this.handleSliderScroll}\r\n            >\r\n            </span>\r\n            <span\r\n              class=\"slider-arrow slider-forward icon icon--arrow-long-right_24\"\r\n              data-direction=\"forward\"\r\n              @click=${this.handleSliderScroll}\r\n            >\r\n            </span>\r\n            <div class=\"tabs-header\" role=\"tablist\">\r\n              ${this.renderTabHeaders(this.tabsData)}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div class=\"tabs-content-wrapper\">\r\n          ${this.renderTabContents(this.tabsData)}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Equivalent to NgOnInit or OnMount;\r\n  firstUpdated() {\r\n    // Set first tab to be selected\r\n    this.setHeaderTabSelected(this.headers[0]);\r\n    this.setContentTabSelected(this.headers[0]);\r\n    this.toggleTabsSliderArrows();\r\n\r\n    this.tabsHeader.addEventListener('scroll', () =>\r\n      this.toggleTabsSliderArrows(),\r\n    );\r\n  }\r\n\r\n  toggleTabsSliderArrows() {\r\n    toggleHorizontalScrollArrows(this.tabsWrapper, this.tabsHeader);\r\n  }\r\n\r\n  private handleSliderScroll(e: Event) {\r\n    const btn = e.target as HTMLElement;\r\n    const dir = btn.dataset.direction as 'forward' | 'back';\r\n\r\n    // Setting variables for dynamic tab centering based on elements\r\n    const tabSliderWrapperCenter = this.tabsWrapper.offsetWidth / 2;\r\n    const tabsWidthArray = Array.from(\r\n      this.tabsHeader.children as HTMLCollectionOf<HTMLButtonElement>,\r\n    ).map(tab => tab.offsetWidth);\r\n    const leftOffsetToCenters = calcLeftOffsets(tabsWidthArray);\r\n    const nearestTabIndex = leftOffsetToCenters.findIndex(\r\n      tabCenter => tabCenter > tabSliderWrapperCenter,\r\n    );\r\n\r\n    // initial scroll will be based on proximity, consecutive will step through tabs\r\n    if (this.currentTabIndex === 0) {\r\n      this.currentTabIndex = nearestTabIndex;\r\n      this.nextTabIndex = this.currentTabIndex;\r\n    } else {\r\n      this.nextTabIndex = this.currentTabIndex + 1;\r\n      this.prevTabIndex = this.currentTabIndex - 1;\r\n    }\r\n\r\n    const leftScroll = this.getLeftScroll(\r\n      dir,\r\n      tabSliderWrapperCenter,\r\n      leftOffsetToCenters,\r\n    );\r\n\r\n    this.tabsHeader.scroll({\r\n      top: 0,\r\n      left: leftScroll,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  protected renderTabContents(tabs: TabData[]): TemplateResult {\r\n    return html`\r\n      ${repeat(\r\n        tabs,\r\n        tab => tab.id,\r\n        (tab, index) =>\r\n          html`\r\n            <div\r\n              data-tab-index=${index}\r\n              class=\"tabs-content\"\r\n              .id=${tab.id}\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"nav-${tab.id}-tab\"\r\n            >\r\n              ${unsafeHTML(tab.body)}\r\n            </div>\r\n          `,\r\n      )}\r\n    `;\r\n  }\r\n\r\n  protected renderTabHeaders(tabs: TabData[]): TemplateResult {\r\n    return html`\r\n      ${repeat(\r\n        tabs,\r\n        tabs => tabs.id,\r\n        (tab, index) =>\r\n          html` <button\r\n            tabindex=\"0\"\r\n            role=\"tab\"\r\n            data-tab-index=\"${index}\"\r\n            aria-controls=\"${tab.id}\"\r\n            aria-expanded=\"false\"\r\n            @click=${this.handleTabSwitch}\r\n          >\r\n            ${this.icons\r\n              ? html`<zwc-icon .icon=${this.icons}></zwc-icon>${tab.label}`\r\n              : html`${tab.label}`}\r\n          </button>`,\r\n      )}\r\n    `;\r\n  }\r\n\r\n  protected handleTabSwitch(e: Event) {\r\n    if ((e.target as HTMLElement).nodeName !== 'BUTTON') return;\r\n    // Set selected aria-expanded to true and others to false\r\n    this.setHeaderTabSelected(e.target);\r\n    this.setContentTabSelected(e.target);\r\n  }\r\n\r\n  private setHeaderTabSelected(target: EventTarget | null) {\r\n    if (!target) return;\r\n    const targetButton = target as HTMLButtonElement;\r\n    this.headers.forEach(button => {\r\n      button.classList.toggle('selected', button === targetButton);\r\n\r\n      if (button === targetButton) {\r\n        button.setAttribute('aria-expanded', 'true');\r\n      } else {\r\n        button.setAttribute('aria-expanded', 'false');\r\n      }\r\n    });\r\n  }\r\n\r\n  private setContentTabSelected(target: EventTarget | null) {\r\n    if (!target) return;\r\n    const tabIndex = (target as HTMLButtonElement).dataset.tabIndex;\r\n\r\n    this.contentDivs.forEach(content => {\r\n      content.classList.toggle(\r\n        'selected',\r\n        content.dataset.tabIndex === tabIndex,\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns next leftScroll coordinate.\r\n   * @param {String} direction 'forward' | 'back'\r\n   * @param {Number} tabsWrapperCenter Coordinate 'x' value for wrapper center.\r\n   * @param {Array<Number>} tabOffsetsCenters Array of tab left offsets for each tab\r\n   * @returns Number\r\n   */\r\n  private getLeftScroll(\r\n    direction: 'forward' | 'back',\r\n    tabsWrapperCenter: number,\r\n    tabOffsetsCenters: number[],\r\n  ): number {\r\n    if (direction === 'forward') {\r\n      this.currentTabIndex = this.nextTabIndex;\r\n      return tabOffsetsCenters[this.nextTabIndex] - tabsWrapperCenter;\r\n    }\r\n\r\n    this.currentTabIndex = this.prevTabIndex;\r\n    return tabOffsetsCenters[this.prevTabIndex] - tabsWrapperCenter;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-tabs-renderer': ZwcTabsRenderer;\r\n  }\r\n}\r\n"],"names":["ZwcTabsRenderer","Base","classes","html","classMap","toggleHorizontalScrollArrows","e","dir","tabSliderWrapperCenter","tabsWidthArray","tab","leftOffsetToCenters","calcLeftOffsets","nearestTabIndex","tabCenter","leftScroll","tabs","repeat","index","unsafeHTML","target","targetButton","button","tabIndex","content","direction","tabsWrapperCenter","tabOffsetsCenters","__decorateClass","property","queryAll","query","customElement"],"mappings":"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"}