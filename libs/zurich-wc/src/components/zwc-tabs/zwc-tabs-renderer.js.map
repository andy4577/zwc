{"version":3,"file":"zwc-tabs-renderer.js","sources":["../../../../../../src/components/zwc-tabs/zwc-tabs-renderer.ts"],"sourcesContent":["import { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { html, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { repeat } from 'lit/directives/repeat.js';\r\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\r\n\r\nimport { Base } from '../base'\r\nimport '../zwc-icon';\r\nimport { TabData } from './zwc-tabs-template';\r\nimport { calcLeftOffsets, toggleHorizontalScrollArrows } from '../../utils/index';\r\n\r\nexport type TabsAlignment = 'stretch' | 'left' | 'center' | 'right';\r\n\r\n@customElement('zwc-tabs-renderer')\r\nexport class ZwcTabsRenderer extends Base {\r\n  @property({ type: Object })\r\n  tabsData: TabData[] = [];\r\n\r\n  @property({ type: String })\r\n  layout: TabsAlignment = 'stretch';\r\n\r\n  @property({ type: String })\r\n  icons = '';\r\n\r\n  @property({ type: Boolean })\r\n  scrollToTab = true;\r\n\r\n  @queryAll('.tabs-header > button')\r\n  headers!: NodeListOf<HTMLButtonElement>;\r\n\r\n  @queryAll('.tabs-content')\r\n  contentDivs!: NodeListOf<HTMLDivElement>;\r\n\r\n  @query('.tabs-header-wrapper')\r\n  tabsWrapper!: HTMLDivElement;\r\n\r\n  @query('.tabs-header')\r\n  tabsHeader!: HTMLDivElement;\r\n\r\n  currentTabIndex = 0;\r\n  nextTabIndex!: number;\r\n  prevTabIndex!: number;\r\n\r\n  protected override render(): TemplateResult {\r\n    const classes = {\r\n      tabs: true,\r\n      [`tabs--${this.layout}`]: true,\r\n      'tabs-icons': this.icons,\r\n    };\r\n\r\n    return html`\r\n      <div class=\"${classMap(classes)}\" ?data-scroll-to-tab=${this.scrollToTab}>\r\n        <nav>\r\n          <div class=\"tabs-header-wrapper\">\r\n            <span\r\n              class=\"slider-arrow slider-back icon icon--arrow-long-left_24\"\r\n              data-direction=\"back\"\r\n              @click=${this.handleSliderScroll}\r\n            >\r\n            </span>\r\n            <span\r\n              class=\"slider-arrow slider-forward icon icon--arrow-long-right_24\"\r\n              data-direction=\"forward\"\r\n              @click=${this.handleSliderScroll}\r\n            >\r\n            </span>\r\n            <div class=\"tabs-header\" role=\"tablist\">\r\n              ${this.renderTabHeaders(this.tabsData)}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div class=\"tabs-content-wrapper\">\r\n          ${this.renderTabContents(this.tabsData)}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Equivalent to NgOnInit or OnMount;\r\n  firstUpdated() {\r\n    // Set first tab to be selected\r\n    this.setHeaderTabSelected(this.headers[0]);\r\n    this.setContentTabSelected(this.headers[0]);\r\n    this.toggleTabsSliderArrows();\r\n\r\n    this.tabsHeader.addEventListener('scroll', () =>\r\n      this.toggleTabsSliderArrows(),\r\n    );\r\n  }\r\n\r\n  toggleTabsSliderArrows() {\r\n    toggleHorizontalScrollArrows(this.tabsWrapper, this.tabsHeader);\r\n  }\r\n\r\n  private handleSliderScroll(e: Event) {\r\n    const btn = e.target as HTMLElement;\r\n    const dir = btn.dataset.direction as 'forward' | 'back';\r\n\r\n    // Setting variables for dynamic tab centering based on elements\r\n    const tabSliderWrapperCenter = this.tabsWrapper.offsetWidth / 2;\r\n    const tabsWidthArray = Array.from(\r\n      this.tabsHeader.children as HTMLCollectionOf<HTMLButtonElement>,\r\n    ).map(tab => tab.offsetWidth);\r\n    const leftOffsetToCenters = calcLeftOffsets(tabsWidthArray);\r\n    const nearestTabIndex = leftOffsetToCenters.findIndex(\r\n      tabCenter => tabCenter > tabSliderWrapperCenter,\r\n    );\r\n\r\n    // initial scroll will be based on proximity, consecutive will step through tabs\r\n    if (this.currentTabIndex === 0) {\r\n      this.currentTabIndex = nearestTabIndex;\r\n      this.nextTabIndex = this.currentTabIndex;\r\n    } else {\r\n      this.nextTabIndex = this.currentTabIndex + 1;\r\n      this.prevTabIndex = this.currentTabIndex - 1;\r\n    }\r\n\r\n    const leftScroll = this.getLeftScroll(\r\n      dir,\r\n      tabSliderWrapperCenter,\r\n      leftOffsetToCenters,\r\n    );\r\n\r\n    this.tabsHeader.scroll({\r\n      top: 0,\r\n      left: leftScroll,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  protected renderTabContents(tabs: TabData[]): TemplateResult {\r\n    return html`\r\n      ${repeat(\r\n        tabs,\r\n        tab => tab.id,\r\n        (tab, index) =>\r\n          html`\r\n            <div\r\n              data-tab-index=${index}\r\n              class=\"tabs-content\"\r\n              .id=${tab.id}\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"nav-${tab.id}-tab\"\r\n            >\r\n              ${unsafeHTML(tab.body)}\r\n            </div>\r\n          `,\r\n      )}\r\n    `;\r\n  }\r\n\r\n  protected renderTabHeaders(tabs: TabData[]): TemplateResult {\r\n    return html`\r\n      ${repeat(\r\n        tabs,\r\n        tabs => tabs.id,\r\n        (tab, index) =>\r\n          html` <button\r\n            tabindex=\"0\"\r\n            role=\"tab\"\r\n            data-tab-index=\"${index}\"\r\n            aria-controls=\"${tab.id}\"\r\n            aria-expanded=\"false\"\r\n            @click=${this.handleTabSwitch}\r\n          >\r\n            ${this.icons\r\n              ? html`<zwc-icon .icon=${this.icons}></zwc-icon>${tab.label}`\r\n              : html`${tab.label}`}\r\n          </button>`,\r\n      )}\r\n    `;\r\n  }\r\n\r\n  protected handleTabSwitch(e: Event) {\r\n    if ((e.target as HTMLElement).nodeName !== 'BUTTON') return;\r\n    // Set selected aria-expanded to true and others to false\r\n    this.setHeaderTabSelected(e.target);\r\n    this.setContentTabSelected(e.target);\r\n  }\r\n\r\n  private setHeaderTabSelected(target: EventTarget | null) {\r\n    if (!target) return;\r\n    const targetButton = target as HTMLButtonElement;\r\n    this.headers.forEach(button => {\r\n      button.classList.toggle('selected', button === targetButton);\r\n\r\n      if (button === targetButton) {\r\n        button.setAttribute('aria-expanded', 'true');\r\n      } else {\r\n        button.setAttribute('aria-expanded', 'false');\r\n      }\r\n    });\r\n  }\r\n\r\n  private setContentTabSelected(target: EventTarget | null) {\r\n    if (!target) return;\r\n    const tabIndex = (target as HTMLButtonElement).dataset.tabIndex;\r\n\r\n    this.contentDivs.forEach(content => {\r\n      content.classList.toggle(\r\n        'selected',\r\n        content.dataset.tabIndex === tabIndex,\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns next leftScroll coordinate.\r\n   * @param {String} direction 'forward' | 'back'\r\n   * @param {Number} tabsWrapperCenter Coordinate 'x' value for wrapper center.\r\n   * @param {Array<Number>} tabOffsetsCenters Array of tab left offsets for each tab\r\n   * @returns Number\r\n   */\r\n  private getLeftScroll(\r\n    direction: 'forward' | 'back',\r\n    tabsWrapperCenter: number,\r\n    tabOffsetsCenters: number[],\r\n  ): number {\r\n    if (direction === 'forward') {\r\n      this.currentTabIndex = this.nextTabIndex;\r\n      return tabOffsetsCenters[this.nextTabIndex] - tabsWrapperCenter;\r\n    }\r\n\r\n    this.currentTabIndex = this.prevTabIndex;\r\n    return tabOffsetsCenters[this.prevTabIndex] - tabsWrapperCenter;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-tabs-renderer': ZwcTabsRenderer;\r\n  }\r\n}\r\n"],"names":["ZwcTabsRenderer","Base","classes","html","classMap","toggleHorizontalScrollArrows","dir","tabSliderWrapperCenter","tabsWidthArray","tab","leftOffsetToCenters","calcLeftOffsets","nearestTabIndex","tabCenter","leftScroll","tabs","repeat","index","unsafeHTML","target","targetButton","button","tabIndex","content","direction","tabsWrapperCenter","tabOffsetsCenters","__decorateClass","property","queryAll","query","customElement"],"mappings":"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"}