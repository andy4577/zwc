{"version":3,"file":"zwc-breadcrumb.js","sources":["../../../../../../src/components/zwc-breadcrump/zwc-breadcrumb.ts"],"sourcesContent":["import { customElement, property, query } from 'lit/decorators.js';\r\nimport { css, CSSResultGroup, LitElement, html, TemplateResult } from 'lit';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport './zwc-breadcrumb-item';\r\nimport '../shared/zwc-template';\r\nimport { ZwcBreadcrumbItem } from './zwc-breadcrumb-item';\r\n\r\n@customElement('zwc-breadcrumb')\r\nexport class ZwcBreadcrumb extends LitElement {\r\n  @query('slot')\r\n  defaultSlot: HTMLSlotElement | undefined;\r\n\r\n  @query('slot[name=\"separator\"]')\r\n  separatorSlot: HTMLSlotElement | undefined;\r\n\r\n  @property({ type: Boolean, reflect: true })\r\n  inverted = false;\r\n\r\n  static override styles?: CSSResultGroup | undefined = [\r\n    css`\r\n      .breadcrumbs {\r\n        display: flex;\r\n        flex-direction: row;\r\n        gap: 3px;\r\n      }\r\n    `,\r\n  ];\r\n\r\n  // Generates a clone of the separator element to use for each breadcrumb item\r\n  private getSeparator() {\r\n    const separator = this.separatorSlot?.assignedElements({\r\n      flatten: true,\r\n    })[0] as HTMLElement;\r\n\r\n    // Clone it, remove ids, and slot it\r\n    const clone = separator.cloneNode(true) as HTMLElement;\r\n    [clone, ...clone.querySelectorAll('[id]')].forEach(el =>\r\n      el.removeAttribute('id'),\r\n    );\r\n    clone.setAttribute('data-default', '');\r\n    clone.slot = 'separator';\r\n\r\n    return clone;\r\n  }\r\n\r\n  private handleSlotChange() {\r\n    if (this.defaultSlot) {\r\n      const items = [\r\n        ...this.defaultSlot.assignedElements({ flatten: true }),\r\n      ].filter(\r\n        item => item.tagName.toLowerCase() === 'zwc-breadcrumb-item',\r\n      ) as ZwcBreadcrumbItem[];\r\n\r\n      items.forEach((item, index) => {\r\n        if (index !== items.length - 1) {\r\n          const separator = item.querySelector('[slot=\"separator\"]');\r\n          if (separator === null) {\r\n            item.shadowRoot?.append(this.getSeparator());\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  protected override render(): TemplateResult {\r\n    const classes = {\r\n      breadcrumbs: true,\r\n      inverted: this.inverted,\r\n    };\r\n\r\n    return html` <div class=\"${classMap(classes)}\" aria-label=\"breadcrumbs\">\r\n      <slot @slotchange=${this.handleSlotChange}></slot>\r\n      <slot name=\"separator\" hidden aria-hidden=\"true\">\r\n        <zwc-icon size=\"xs\" icon=\"action-arrow-right_outline\"></zwc-icon>\r\n      </slot>\r\n    </div>`;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'zwc-breadcrumb': ZwcBreadcrumb;\r\n  }\r\n}\r\n"],"names":["ZwcBreadcrumb","LitElement","clone","_a","el","items","item","index","classes","html","classMap","css","__decorateClass","query","property","customElement"],"mappings":";;;;;;;;;;AAQa,IAAAA,IAAN,cAA4BC,EAAW;AAAA,EAAvC,cAAA;AAAA,UAAA,GAAA,SAAA,GAQM,KAAA,WAAA;AAAA,EAAA;AAAA,EAaH,eAAe;;AAMf,UAAAC,MALYC,IAAA,KAAK,kBAAL,gBAAAA,EAAoB,iBAAiB;AAAA,MACrD,SAAS;AAAA,IAAA,GACR,IAGqB,UAAU,EAAI;AACtC,YAACD,GAAO,GAAGA,EAAM,iBAAiB,MAAM,CAAC,EAAE;AAAA,MAAQ,CAAAE,MACjDA,EAAG,gBAAgB,IAAI;AAAA,IAAA,GAEnBF,EAAA,aAAa,gBAAgB,EAAE,GACrCA,EAAM,OAAO,aAENA;AAAA,EACT;AAAA,EAEQ,mBAAmB;AACzB,QAAI,KAAK,aAAa;AACpB,YAAMG,IAAQ;AAAA,QACZ,GAAG,KAAK,YAAY,iBAAiB,EAAE,SAAS,IAAM;AAAA,MAAA,EACtD;AAAA,QACA,CAAQC,MAAAA,EAAK,QAAQ,YAAkB,MAAA;AAAA,MAAA;AAGnC,MAAAD,EAAA,QAAQ,CAACC,GAAMC,MAAU;;AACzB,QAAAA,MAAUF,EAAM,SAAS,KACTC,EAAK,cAAc,oBAAoB,MACvC,UAChBH,IAAAG,EAAK,eAAL,QAAAH,EAAiB,OAAO,KAAK,aAAc;AAAA,MAE/C,CACD;AAAA,IACH;AAAA,EACF;AAAA,EAEmB,SAAyB;AAC1C,UAAMK,IAAU;AAAA,MACd,aAAa;AAAA,MACb,UAAU,KAAK;AAAA,IAAA;AAGV,WAAAC,iBAAoBC,EAASF,CAAO;AAAA,0BACrB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAK7B;AACF;AArEaR,EAUK,SAAsC;AAAA,EACpDW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOF;AAhBAC,EAAA;AAAA,EADCC,EAAM,MAAM;AAAA,GADFb,EAEX,WAAA,eAAA,CAAA;AAGAY,EAAA;AAAA,EADCC,EAAM,wBAAwB;AAAA,GAJpBb,EAKX,WAAA,iBAAA,CAAA;AAGAY,EAAA;AAAA,EADCE,EAAS,EAAE,MAAM,SAAS,SAAS,IAAM;AAAA,GAP/Bd,EAQX,WAAA,YAAA,CAAA;AARWA,IAANY,EAAA;AAAA,EADNG,EAAc,gBAAgB;AAAA,GAClBf,CAAA;"}